///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Список.Параметры.УстановитьЗначениеПараметра("Идентификатор", "ОповещениеПользователейФМедиа");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ОткрытьФорму("РегистрСведений.НапоминанияПользователя.Форма.Напоминание", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	СтрокаВыбрана = Не Элемент.ТекущаяСтрока = Неопределено;
	Элементы.КнопкаУдалить.Доступность = СтрокаВыбрана;
	Элементы.КнопкаИзменить.Доступность = СтрокаВыбрана;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	УдалитьНапоминание();
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "Источник" Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.Источник) Тогда
			ПоказатьЗначение(, Элементы.Список.ТекущиеДанные.Источник);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Источник напоминания не задан.'"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
    
	Оповещение = Новый ОписаниеОповещения("РедактированиеНапоминанийЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("РегистрСведений.НапоминанияПользователя.Форма.фмНапоминание", 
		,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
            
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеНапоминанийЗавершение(Знач РезультатРедактирования, Знач ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатРедактирования)Тогда
        
        ЗаписатьДанныеВРегистНапоминаний(РезультатРедактирования);	
        ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.НапоминанияПользователя"));
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура Изменить(Команда)
	ОткрытьФорму("РегистрСведений.НапоминанияПользователя.Форма.Напоминание", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	УдалитьНапоминание();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтключитьНапоминание(ПараметрыНапоминания)
	НапоминанияПользователяСлужебный.ОтключитьНапоминание(ПараметрыНапоминания, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНапоминание()
    
    КлючЗаписи = Элементы.Список.ТекущаяСтрока;
    УдалитьСтрокуВНапоминаниях(КлючЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеСообщения(Команда)
    
    УдалитьВсеСообщенияНаСервере();
    ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.НапоминанияПользователя"));
    
КонецПроцедуры

&НаСервере
Процедура УдалитьВсеСообщенияНаСервере() 
    
    РегистрыСведений.НапоминанияПользователя.УдалитьВсеСообщенияНаСервере();
    
КонецПроцедуры                  

&НаКлиенте
Процедура УдалитьСтрокуВНапоминаниях(КлючЗаписи)
    
	ПараметрыНапоминания = Новый Структура("Пользователь,ВремяСобытия,Источник");
	ЗаполнитьЗначенияСвойств(ПараметрыНапоминания, Элементы.Список.ТекущиеДанные);
	
	ОтключитьНапоминание(ПараметрыНапоминания);
	НапоминанияПользователяКлиент.УдалитьЗаписьИзКэшаОповещений(ПараметрыНапоминания);
	Оповестить("Запись_НапоминанияПользователя", Новый Структура, КлючЗаписи);
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.НапоминанияПользователя"));
    
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеВРегистНапоминаний(РезультатРедактирования)
    
    ДанныеСтруктура = ПолучитьИзВременногоХранилища(РезультатРедактирования);
    
    ВремяОповещенияДата = ДанныеСтруктура.ВремяОповещения; 
    СообщениеСтока      = ДанныеСтруктура.ТекстСообщения;
    СообщениеСтокаНаИспанском = ДанныеСтруктура.ТекстСообщенияНаИспанском; 
    
    
    Если ЗначениеЗаполнено(ВремяОповещенияДата) И ЗначениеЗаполнено(СообщениеСтока) Тогда
        
        ПользователиТаблица = фуОбщийСервер.ПолучитьВсехПользователей();
        НаборЗаписей = РегистрыСведений.НапоминанияПользователя.СоздатьНаборЗаписей();
        НаборЗаписей.Прочитать();
        
        Для каждого ПользовательСтока Из ПользователиТаблица Цикл
            
            Запись = НаборЗаписей.Добавить();
            Запись.Пользователь = ПользовательСтока.Пользователь; 
            Запись.ВремяСобытия = ВремяОповещенияДата;
            Запись.СрокНапоминания = ВремяОповещенияДата;
            Запись.Описание = СообщениеСтока; 
            Запись.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ВУказанноеВремя;
            Запись.ИнтервалВремениНапоминания = 3600;
            Запись.ПредставлениеИсточника = "не задан";   
            Запись.Идентификатор = "ОповещениеПользователейФМедиа";
            
        КонецЦикла; 
        
        НаборЗаписей.Записать(Истина);
    	
    КонецЕсли;      

КонецПроцедуры

&НаКлиенте
Процедура фмОткрытьФормуОповещения(Команда)
    НапоминанияПользователяКлиент.ОткрытьФормуОповещения();
КонецПроцедуры

#КонецОбласти
