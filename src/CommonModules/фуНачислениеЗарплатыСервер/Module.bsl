#Область о //Расчетные листки:

&НаСервере
Функция ПолучитьТЗНачисленияИУдержанияПоСотрудникам(дТекущийПериод,массСотрудники)
	
	Запрос = Новый Запрос;    
	// Запрос не рабочий. При необходимости поправить:
	//Запрос.Текст = 
	//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.Сотрудник КАК Сотрудник,
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.Период КАК ПериодНачисления,
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.Валюта КАК Валюта,
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.СуммаОборот КАК Начисление,
	//    |   0 КАК Удержание
	//    |ПОМЕСТИТЬ втНачисленияИУдержания
	//    |ИЗ
	//    |   РегистрНакопления.фуНачисленияУдержанияПоСотрудникам.Обороты(&Дата1, &Дата2, Регистратор, Сотрудник В (&массСотрудники)) КАК фмНачисленияУдержанияПоСотрудникамОбороты
	//    |ГДЕ
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.Регистратор ССЫЛКА Документ.фуНачислениеЗарплаты
	//    |
	//    |ОБЪЕДИНИТЬ ВСЕ
	//    |
	//    |ВЫБРАТЬ
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.Сотрудник,
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.ВидНачисленияУдержания,
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.Период,
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.Валюта,
	//    |   0,
	//    |   -1 * фмНачисленияУдержанияПоСотрудникамОбороты.СуммаОборот
	//    |ИЗ
	//    |   РегистрНакопления.фуНачисленияУдержанияПоСотрудникам.Обороты(&Дата1, &Дата2, Регистратор, Сотрудник В (&массСотрудники)) КАК фмНачисленияУдержанияПоСотрудникамОбороты
	//    |ГДЕ
	//    |   фмНачисленияУдержанияПоСотрудникамОбороты.Регистратор ССЫЛКА Документ.фуВыплатаПоТКРФ
	//    |;
	//    |
	//    |////////////////////////////////////////////////////////////////////////////////
	//    |ВЫБРАТЬ
	//    |   втНачисленияИУдержания.Сотрудник КАК Сотрудник,
	//    |   втНачисленияИУдержания.Сотрудник.Код КАК СотрудникКод,
	//    |   втНачисленияИУдержания.Сотрудник.Организация КАК Организация,
	//    |   втНачисленияИУдержания.Сотрудник.Отдел КАК Отдел,
	//    |   втНачисленияИУдержания.Сотрудник.Должность КАК Должность,
	//    |   втНачисленияИУдержания.Сотрудник.ОкладУправленческий КАК Оклад,
	//    |   втНачисленияИУдержания.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
	//    |   втНачисленияИУдержания.ПериодНачисления КАК ПериодНачисления,
	//    |   втНачисленияИУдержания.Валюта КАК Валюта,
	//    |   СУММА(втНачисленияИУдержания.Начисление) КАК СуммаНачислено,
	//    |   СУММА(втНачисленияИУдержания.Удержание) КАК СуммаУдержано
	//    |ИЗ
	//    |   втНачисленияИУдержания КАК втНачисленияИУдержания
	//    |
	//    |СГРУППИРОВАТЬ ПО
	//    |   втНачисленияИУдержания.Сотрудник,
	//    |   втНачисленияИУдержания.Сотрудник.Отдел,
	//    |   втНачисленияИУдержания.Сотрудник.Должность,
	//    |   втНачисленияИУдержания.ВидНачисленияУдержания,
	//    |   втНачисленияИУдержания.ПериодНачисления,
	//    |   втНачисленияИУдержания.Валюта,
	//    |   втНачисленияИУдержания.Сотрудник.ОкладУправленческий,
	//    |   втНачисленияИУдержания.Сотрудник.Код,
	//    |   втНачисленияИУдержания.Сотрудник.Организация
	//    |
	//    |УПОРЯДОЧИТЬ ПО
	//    |   втНачисленияИУдержания.Сотрудник.Фамилия,
	//    |   втНачисленияИУдержания.Сотрудник.Имя,
	//    |   втНачисленияИУдержания.Сотрудник.Отчество";
	
	Если Не ЗначениеЗаполнено(массСотрудники) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&массСотрудники)","Истина");	
	КонецЕсли;
	
	дДата1 = НачалоМесяца(дТекущийПериод);
	дДата2 = Новый Граница(КонецМесяца(дТекущийПериод),ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Дата1", дДата1);
	Запрос.УстановитьПараметр("Дата2", дДата2);
	Запрос.УстановитьПараметр("массСотрудники",массСотрудники);
	
	тз = Запрос.Выполнить().Выгрузить(); 
	Возврат тз;
	
КонецФункции

&НаСервере
Функция ПолучитьТЗСальдо(дТекущийПериод,массСотрудники)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   фмНачисленияУдержанияПоСотрудникамОстатки.Сотрудник КАК Сотрудник,
        |   фмНачисленияУдержанияПоСотрудникамОстатки.Валюта КАК Валюта,
        |   фмНачисленияУдержанияПоСотрудникамОстатки.СуммаОстаток КАК СальдоВходящееСумма,
        |   0 КАК СальдоИсходящееСумма
        |ПОМЕСТИТЬ втСальдо
        |ИЗ
        |   РегистрНакопления.фуНачисленияУдержанияПоСотрудникам.Остатки(&Дата1, Сотрудник В (&массСотрудники)) КАК фмНачисленияУдержанияПоСотрудникамОстатки
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   фмНачисленияУдержанияПоСотрудникамОстатки.Сотрудник,
        |   фмНачисленияУдержанияПоСотрудникамОстатки.Валюта,
        |   0,
        |   фмНачисленияУдержанияПоСотрудникамОстатки.СуммаОстаток
        |ИЗ
        |   РегистрНакопления.фуНачисленияУдержанияПоСотрудникам.Остатки(&Дата2, Сотрудник В (&массСотрудники)) КАК фмНачисленияУдержанияПоСотрудникамОстатки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   втСальдо.Сотрудник КАК Сотрудник,
        |   втСальдо.Валюта КАК Валюта,
        |   СУММА(втСальдо.СальдоВходящееСумма) КАК СальдоВходящееСумма,
        |   СУММА(втСальдо.СальдоИсходящееСумма) КАК СальдоИсходящееСумма
        |ИЗ
        |   втСальдо КАК втСальдо
        |
        |СГРУППИРОВАТЬ ПО
        |   втСальдо.Сотрудник,
        |   втСальдо.Валюта";
	
	Если Не ЗначениеЗаполнено(массСотрудники) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&массСотрудники)","Истина");	
	КонецЕсли;
	
	дДата1 = НачалоМесяца(дТекущийПериод)-1;
	дДата2 = Новый Граница(КонецМесяца(дТекущийПериод), ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Дата1", дДата1);
	Запрос.УстановитьПараметр("Дата2", дДата2);
	Запрос.УстановитьПараметр("массСотрудники", массСотрудники);
	
	тз = Запрос.Выполнить().Выгрузить();                                               
	Возврат тз;
	
КонецФункции

&НаСервере
Процедура ВывестиИтоги(Валюта,тзНачисления,тзУдержания,Макет,ТабДок)
	
	чВсегоНачислено = 0; 
	чВсегоУдаржано  = 0;

	стрПоиск = Новый Структура("Валюта",Валюта);
	
	массНачисления 	= тзНачисления.НайтиСтроки(стрПоиск); 
	Для каждого стрНачислено из массНачисления Цикл
		чВсегоНачислено = чВсегоНачислено + стрНачислено.СуммаНачислено; 
	КонецЦикла;
	
	массУдержания 	= тзУдержания.НайтиСтроки(стрПоиск); 
	Для каждого стрУдержано из массУдержания Цикл
		чВсегоУдаржано  = чВсегоУдаржано + стрУдержано.СуммаУдержано; 
	КонецЦикла;

	Если (чВсегоНачислено <> 0) ИЛИ (чВсегоУдаржано <> 0) Тогда  
		облИтог12 = Макет.ПолучитьОбласть("Итог12"); 
		облИтог12.Параметры.КодВалюты		= Валюта.Наименование;
		облИтог12.Параметры.СуммаНачисления	= чВсегоНачислено;
		облИтог12.Параметры.СуммаУдержания	= чВсегоУдаржано;
		ТабДок.Вывести(облИтог12);
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ВывестиИтогиПоСальдо(Валюта,Сотрудник,тзСальдо,Макет,ТабДок,дТекущийПериод)
	
	стрПоиск = Новый Структура;
	стрПоиск.Вставить("Сотрудник",Сотрудник);
	стрПоиск.Вставить("Валюта",Валюта);
	
	чСальдоНаНачалоПериода = 0;
	чСальдоНаКонецПериода = 0;
	
	массСальдо = тзСальдо.НайтиСтроки(стрПоиск); 
	
	Для каждого стрСальдо из массСальдо Цикл
		чСальдоНаНачалоПериода = чСальдоНаНачалоПериода + стрСальдо.СальдоВходящееСумма;
		чСальдоНаКонецПериода = чСальдоНаКонецПериода + стрСальдо.СальдоИсходящееСумма;
	КонецЦикла;
	
	Если (чСальдоНаНачалоПериода <> 0) ИЛИ (чСальдоНаКонецПериода <> 0) Тогда 
		облСальдо = Макет.ПолучитьОбласть("Сальдо");
		облСальдо.Параметры.ТекстДолгНаНачалоПериода = "Входящее сальдо на "
		                                             + Формат(НачалоМесяца(дТекущийПериод),"ДФ=dd.MM.yyyy") 
													 + " (" +Валюта+")" 
													 + ":";
		облСальдо.Параметры.СуммаДолгНаНачалоПериода = чСальдоНаНачалоПериода;
		облСальдо.Параметры.ТекстДолгНаКонецПериода = "Исходящее сальдо на "
		                                            + Формат(КонецМесяца(дТекущийПериод),"ДФ=dd.MM.yyyy") 
													+ " (" +Валюта+")"
													+ ":";
		облСальдо.Параметры.СуммаДолгНаКонецПериода = чСальдоНаКонецПериода;
		
		ТабДок.Вывести(облСальдо);
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Функция ПолучитьКВыплате(Валюта,массНачисленияИУдержания);
	
	чКВыплате = 0;
	
	Для каждого стрНачисленияИУдержания из массНачисленияИУдержания Цикл
		
		Если стрНачисленияИУдержания.Валюта = Валюта Тогда
			чКВыплате = стрНачисленияИУдержания.СуммаНачислено - стрНачисленияИУдержания.СуммаУдержано;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Формат(Строка(чКВыплате),"ЧДЦ=2");
	
КонецФункции

// Функция получает табличный документ по параметрам:
//		Дата1 - дата, начало периода
//		Дата2 - дата, конец периода
//		массСотрудники - массив, перечень сотрудников организации
&НаСервере
Функция ПолучитьТабличныйДокументРасчетныеЛистки(дДата1,дДата2,массСотрудники = Неопределено) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("\"); 
	
	сОсновныеВалюты = фуОперацииСВалютамиКлиентСервер.ПолучитьОсновныеВалютыСервер();
	
	дТекущийПериод = НачалоМесяца(дДата1);
	Для чМесяц = Месяц(дДата1) По Месяц(дДата2) Цикл
		
		тзНачисленияИУдержания = ПолучитьТЗНачисленияИУдержанияПоСотрудникам(дТекущийПериод,массСотрудники);
		тзСальдо			   = ПолучитьТЗСальдо(дТекущийПериод,массСотрудники);
		
		тзСотрудники = тзНачисленияИУдержания.Скопировать();
		тзСотрудники.Свернуть("Сотрудник,ПериодНачисления,СотрудникКод,Отдел,Должность,Оклад,Организация");
		
		Для каждого стрСотрудник из тзСотрудники Цикл
			
			стрПоиск = Новый Структура("Сотрудник",стрСотрудник.Сотрудник);
			массНачисленияИУдержания = тзНачисленияИУдержания.НайтиСтроки(стрПоиск);

			Если массНачисленияИУдержания.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			массСальдо = тзСальдо.НайтиСтроки(стрПоиск);
			
			облШапка1 = Макет.ПолучитьОбласть("Шапка1");
			облШапка1.Параметры.ПериодПредставление = Формат(стрСотрудник.ПериодНачисления, "ДФ='ММММ гггг'"); 
			облШапка1.Параметры.СотрудникКод = стрСотрудник.СотрудникКод;
			облШапка1.Параметры.ПодразделениеГоловногоСотрудникаНаКонецПериода = стрСотрудник.Отдел;
			облШапка1.Параметры.ДолжностьГоловногоСотрудникаНаКонецПериода = стрСотрудник.Должность;			
			облШапка1.Параметры.ТарифнаяСтавкаНаКонецПериода = стрСотрудник.Оклад;								
			облШапка1.Параметры.СотрудникФизическоеЛицоФИО = стрСотрудник.Сотрудник;
			облШапка1.Параметры.Организация = стрСотрудник.Организация;
			облШапка1.Параметры.КВыплатеRUB = ПолучитьКВыплате(сОсновныеВалюты.Рубль,массНачисленияИУдержания);			
			облШапка1.Параметры.КВыплатеUSD = ПолучитьКВыплате(сОсновныеВалюты.Доллар,массНачисленияИУдержания);			
			облШапка1.Параметры.КВыплатеEUR = ПолучитьКВыплате(сОсновныеВалюты.Евро,массНачисленияИУдержания);			
			
			ТабДок.Вывести(облШапка1);

			тзНачисленияСотрудника = Новый ТаблицаЗначений;
			тзНачисленияСотрудника.Колонки.Добавить("Начисление");
			тзНачисленияСотрудника.Колонки.Добавить("Валюта");
			тзНачисленияСотрудника.Колонки.Добавить("ПериодДействияНачислений");
			тзНачисленияСотрудника.Колонки.Добавить("СуммаНачислено");

			тзУдержанияСотрудника = Новый ТаблицаЗначений;
			тзУдержанияСотрудника.Колонки.Добавить("Удержание");
			тзУдержанияСотрудника.Колонки.Добавить("Валюта");
			тзУдержанияСотрудника.Колонки.Добавить("ПериодДействияУдержаний");
			тзУдержанияСотрудника.Колонки.Добавить("СуммаУдержано");
			
			Для каждого стрНачисленияИУдержания из массНачисленияИУдержания Цикл
			
				Если стрНачисленияИУдержания.СуммаНачислено <> 0 Тогда
					
					стрНачисление = тзНачисленияСотрудника.Добавить();
					стрНачисление.Начисление				= Строка(стрНачисленияИУдержания.ВидНачисленияУдержания)
					                                        +" ("+стрНачисленияИУдержания.Валюта+")";
					стрНачисление.Валюта					= стрНачисленияИУдержания.Валюта;
					стрНачисление.ПериодДействияНачислений  = стрНачисленияИУдержания.ПериодНачисления;
					стрНачисление.СуммаНачислено  			= стрНачисленияИУдержания.СуммаНачислено;				             
					
				КонецЕсли;
					
				Если стрНачисленияИУдержания.СуммаУдержано <> 0 Тогда
					
					стрУдержание = тзУдержанияСотрудника.Добавить();
					стрУдержание.Удержание				  = Строка(стрНачисленияИУдержания.ВидНачисленияУдержания)
					                                      +" ("+стрНачисленияИУдержания.Валюта+")";
					стрУдержание.Валюта					  = стрНачисленияИУдержания.Валюта;
					стрУдержание.ПериодДействияУдержаний  = стрНачисленияИУдержания.ПериодНачисления;
					стрУдержание.СуммаУдержано     		  = стрНачисленияИУдержания.СуммаУдержано;				             
					
				КонецЕсли;
				
			КонецЦикла;

			облШапка2 = Макет.ПолучитьОбласть("Шапка2");
			ТабДок.Вывести(облШапка2);
			
			Если тзНачисленияСотрудника.Количество() > 0 Тогда 
				
				облНачисленоУдержано = Макет.ПолучитьОбласть("НачисленоУдержано");
				ТабДок.Вывести(облНачисленоУдержано);
				
				облСтрокаДвижений = Макет.ПолучитьОбласть("СтрокаДвижений"); 
				
				Для каждого стрНачисления Из тзНачисленияСотрудника Цикл
					ЗаполнитьЗначенияСвойств(облСтрокаДвижений.Параметры,стрНачисления);
					ТабДок.Вывести(облСтрокаДвижений);
				КонецЦикла;
				
			КонецЕсли;
			
			Если тзУдержанияСотрудника.Количество() > 0 Тогда 
				
				облПрочиеВыплачено = Макет.ПолучитьОбласть("ПрочиеВыплачено");
				ТабДок.Вывести(облПрочиеВыплачено);
				
				облСтрокаДвижений = Макет.ПолучитьОбласть("СтрокаДвижений"); 

				Для каждого стрУдержания Из тзУдержанияСотрудника Цикл
					ЗаполнитьЗначенияСвойств(облСтрокаДвижений.Параметры,стрУдержания);
					ТабДок.Вывести(облСтрокаДвижений);
				КонецЦикла;
				
			КонецЕсли;
			
			// Итог для разных валют:
			ВывестиИтоги(сОсновныеВалюты.Рубль,тзНачисленияСотрудника,тзУдержанияСотрудника,Макет,ТабДок);
			ВывестиИтоги(сОсновныеВалюты.Доллар,тзНачисленияСотрудника,тзУдержанияСотрудника,Макет,ТабДок);
			ВывестиИтоги(сОсновныеВалюты.Евро,тзНачисленияСотрудника,тзУдержанияСотрудника,Макет,ТабДок);
			
			// Сальдо:
			ВывестиИтогиПоСальдо(сОсновныеВалюты.Рубль,стрСотрудник.Сотрудник,тзСальдо,Макет,ТабДок,дТекущийПериод);
			ВывестиИтогиПоСальдо(сОсновныеВалюты.Доллар,стрСотрудник.Сотрудник,тзСальдо,Макет,ТабДок,дТекущийПериод);
			ВывестиИтогиПоСальдо(сОсновныеВалюты.Евро,стрСотрудник.Сотрудник,тзСальдо,Макет,ТабДок,дТекущийПериод);

			ТабДок.ВывестиВертикальныйРазделительСтраниц();

		КонецЦикла;	// Сотрудник
		
		дТекущийПериод = ДобавитьМесяц(дТекущийПериод,1);
		
	КонецЦикла; // чМесяц 
	
	ТабДок.Автомасштаб = Истина;
	
	Возврат ТабДок;    	
	
КонецФункции

#КонецОбласти