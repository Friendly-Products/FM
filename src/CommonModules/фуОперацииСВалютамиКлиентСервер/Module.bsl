
// Функция пытается найти валюту, по строке.
//
//	Параметры:
//		стр - строка.
//
&НаСервере
Функция НайтиВалютуПоСтроке(стр,сОсновныеВалюты = Неопределено) Экспорт

	Если сОсновныеВалюты = Неопределено Тогда
		сОсновныеВалюты = ПолучитьОсновныеВалютыСервер();
	КонецЕсли;
	
	ссВалютаСчета = Справочники.Валюты.ПустаяСсылка();
	Если СтрНайти(стр,"USD") Тогда
		ссВалютаСчета = сОсновныеВалюты.Доллар;	
	ИначеЕсли СтрНайти(стр,"EUR") Тогда
		ссВалютаСчета = сОсновныеВалюты.Евро;	
	ИначеЕсли СтрНайти(стр,"RUR") ИЛИ СтрНайти(стр,"RUB") Тогда
		ссВалютаСчета = сОсновныеВалюты.Рубль;
	КонецЕсли;

	Возврат ссВалютаСчета; 
	
КонецФункции

&НаСервере
Функция ПолучитьВСоответсвиеКурсыВалютНаДатуСервер(Дата) Экспорт
	
	сКурсыВалют = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КурсыВалютСрезПоследних.Период КАК Период,
		|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
		|	КурсыВалютСрезПоследних.Курс КАК Курс,
		|	КурсыВалютСрезПоследних.Кратность КАК Кратность
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		сКурсыВалют.Вставить(ВыборкаДетальныеЗаписи.Валюта,ВыборкаДетальныеЗаписи.Курс);
		
	КонецЦикла;
	
	Возврат сКурсыВалют; 
	
КонецФункции

&НаКлиентеНаСервере
Функция КурсВалютыВСоответсвии(сКурсыВалют,Валюта) Экспорт
	
	чКурсВалюты = 0;
	
	Попытка
		чКурсВалюты = сКурсыВалют[Валюта];
	Исключение
		
	КонецПопытки;
		
	Возврат чКурсВалюты; 
	
КонецФункции

&НаСервере
Функция ПолучитьОсновныеВалютыСервер() Экспорт
	
	сОсновныеВалюты = Новый Структура;
	
	сОсновныеВалюты.Вставить("Доллар", Справочники.Валюты.НайтиПоКоду("840"));
	сОсновныеВалюты.Вставить("Евро", Справочники.Валюты.НайтиПоКоду("978"));
	сОсновныеВалюты.Вставить("Рубль", Справочники.Валюты.НайтиПоКоду("643"));
    //
    сОсновныеВалюты.Вставить("КолумбийскийПесо", Справочники.Валюты.НайтиПоКоду("170"));
	сОсновныеВалюты.Вставить("МексиканскийПесо", Справочники.Валюты.НайтиПоКоду("484"));
	сОсновныеВалюты.Вставить("ПеруанскийНовыйСоль", Справочники.Валюты.НайтиПоКоду("604"));
	сОсновныеВалюты.Вставить("СингапурскийДоллар", Справочники.Валюты.НайтиПоКоду("702"));
	сОсновныеВалюты.Вставить("ШвейцарскийФранк", Справочники.Валюты.НайтиПоКоду("756"));
	
	Возврат сОсновныеВалюты; 
	
КонецФункции

&НаСервере
Функция ПолучитьКурсыОснонвыхВалютНаДату(дДата) Экспорт
    
    сОсновныеВалюты = ПолучитьОсновныеВалютыСервер();
    
	сКурсВалюты = Новый Соответствие;
    Для каждого ОсновнаяВалюта Из сОсновныеВалюты Цикл
        сКурсВалюты.Вставить(ОсновнаяВалюта.Значение,0);	
    КонецЦикла; 
    
    сКурсыВалют 	= фуОперацииСВалютамиКлиентСервер.ПолучитьВСоответсвиеКурсыВалютНаДатуСервер(дДата);
    
    Для каждого стрКурсы из сКурсыВалют Цикл
        сКурсВалюты[стрКурсы.Ключ] = стрКурсы.Значение;
	КонецЦикла;
    
	Возврат сКурсВалюты; 
	
КонецФункции

// Возвращает структуру курсов валют за определенный период из таблицы значений с курсами (см. процедуру ПолучитьКурсыВалют).
//
//
&НаСервере
Функция ПолучитьКурсыВалютПоПериоду(сОсновныеВалюты,тзКурсыВалют,Период) Экспорт
	
	стрКурсыВалют = Новый Соответствие;
    
    Для каждого ОсновнаяВалюта Из сОсновныеВалюты Цикл
        стрКурсыВалют.Вставить(ОсновнаяВалюта.Значение,0);	
    КонецЦикла; 
    
	стрПоиск = Новый Структура("Период",Период);
	массКурсыВалют = тзКурсыВалют.НайтиСтроки(стрПоиск);
    
    Для каждого стрКурсы из массКурсыВалют Цикл
        
        Если стрКурсы.Кратность = 0 Тогда
            стрКурсыВалют[стрКурсы.Валюта] = стрКурсы.Курс;
        Иначе
            стрКурсыВалют[стрКурсы.Валюта] = стрКурсы.Курс / стрКурсы.Кратность;    
        КонецЕсли; 
        
    КонецЦикла;	
	
	Возврат стрКурсыВалют; 
	
КонецФункции

// Возвращает таблицу значений с разными курсами валют за период:
//
//	Параметры:	
//		дДата1 - дата, начало периода
//		дДата2 - дата, конец периода
&НаСервере
Функция ПолучитьКурсыВалют(дДата1,дДата2) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
        |   ВложенныйЗапрос.ДатаКалендаря КАК Период,
        |   ВложенныйЗапрос.Валюта КАК Валюта,
        |   КурсыВалют.Курс КАК Курс,
        |   КурсыВалют.Кратность КАК Кратность
        |ИЗ
        |   (ВЫБРАТЬ РАЗЛИЧНЫЕ
        |       ДанныеПроизводственногоКалендаря.Дата КАК ДатаКалендаря,
        |       МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса,
        |       КурсыВалют.Валюта КАК Валюта
        |   ИЗ
        |       РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
        |           ПО ДанныеПроизводственногоКалендаря.Дата >= КурсыВалют.Период
        |   ГДЕ
        |       ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &Дата1 И &Дата2
        |   
        |   СГРУППИРОВАТЬ ПО
        |       ДанныеПроизводственногоКалендаря.Дата,
        |       КурсыВалют.Валюта) КАК ВложенныйЗапрос
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
        |       ПО ВложенныйЗапрос.ДатаКурса = КурсыВалют.Период
        |           И ВложенныйЗапрос.Валюта = КурсыВалют.Валюта";
	
	Запрос.УстановитьПараметр("Дата1", НачалоДня(НачалоДня(дДата1)-1));
	Запрос.УстановитьПараметр("Дата2", КонецДня(КонецДня(дДата2)+1));
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Период");
	
	Возврат тз;	
	
КонецФункции

// Функция возвращает сумму в долларах, по текущей валюте, и курсу.
//
//	Параметры:
//		чСумма				- число, текущая сумма для расчета.
//		ВалютаСчета			- справочник Валюты, текущая валюта суммы.
//		стрКурсыВалют		- структура, содержит курсы валют.
//		сОсновныеВалюты		- соответствие, содержит основные валюты программы.
&НаСервере
Функция ПолучитьСуммуВДолларах(чСумма, ВалютаСчета, стрКурсыВалют, сОсновныеВалюты) Экспорт
	
    чСуммаВДолларах = чСумма;
    Если ВалютаСчета <> сОсновныеВалюты.Доллар Тогда 
        КурсДоллара = стрКурсыВалют[сОсновныеВалюты.Доллар];
        Если КурсДоллара = 0 Тогда
            чСуммаВДолларах = 0;
        Иначе
            чСуммаВДолларах = чСуммаВДолларах * (стрКурсыВалют[ВалютаСчета]/КурсДоллара);
        КонецЕсли; 
        	
    КонецЕсли;   
    
	Возврат Окр(чСуммаВДолларах,2);
	
КонецФункции

// Возвращает таблицу значений с остатками на каждый день по периоду:
//
//	Параметры:	
//		дДата1 - дата, начало периода
//		дДата2 - дата, конец периода
//		сОсновныеВалюты - соотвествие, содержит перечень основных валют.
//		тзКурсыВалют - таблица значений, содержит значение курсов на каждый день (см. функцию: ПолучитьКурсыВалют)
&НаСервере
Функция ПолучитьОстаткиПоСчетамВДолларах(дДата1,дДата2,сОсновныеВалюты,тзКурсыВалют,Отказ = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ДанныеПроизводственногоКалендаря.Дата КАК ДатаКалендаря
				|ПОМЕСТИТЬ ВТ_Дни
				|ИЗ
				|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
				|ГДЕ
				|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&Дата1, ДЕНЬ, -1) И &Дата2
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	фмРасчетныеСчета.Ссылка КАК РасчетныйСчет
				|ПОМЕСТИТЬ втРасчетныеСчета
				|ИЗ
				|	Справочник.фуРасчетныеСчета КАК фмРасчетныеСчета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ВТ_Дни.ДатаКалендаря КАК Период,
				|	фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.РасчетныйСчет КАК РасчетныйСчет,
				|	фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.РасчетныйСчет.ВалютаСчета КАК ВалютаСчета,
				|	СУММА(ВЫБОР
				|			КОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.Период = &Дата1
				|					И ВТ_Дни.ДатаКалендаря = &Дата1
				|				ТОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.СуммаНачальныйОстаток
				|			КОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.Период = &Дата1
				|				ТОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.СуммаНачальныйОстаток + фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.СуммаОборот
				|			ИНАЧЕ ВЫБОР
				|					КОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.Период < ВТ_Дни.ДатаКалендаря
				|						ТОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.СуммаОборот
				|					ИНАЧЕ 0
				|				КОНЕЦ
				|		КОНЕЦ) КАК СуммаОстаток1,
				|	СУММА(ВЫБОР
				|			КОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.Период = &Дата1
				|				ТОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.СуммаКонечныйОстаток
				|			КОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.Период <= ВТ_Дни.ДатаКалендаря
				|				ТОГДА фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.СуммаОборот
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаОстаток2,
				|	0 КАК СуммаОстатокДоллары1,
				|	0 КАК СуммаОстатокДоллары2
				|ПОМЕСТИТЬ втОстаткиНаНачалоДня
				|ИЗ
				|	ВТ_Дни КАК ВТ_Дни
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.фуОстаткиНаРасчетныхСчетах.ОстаткиИОбороты(
				|				&Дата1,
				|				&Дата2,
				|				День,
				|				,
				|				РасчетныйСчет В
				|					(ВЫБРАТЬ
				|						втРасчетныеСчета.РасчетныйСчет КАК РасчетныйСчет
				|					ИЗ
				|						втРасчетныеСчета КАК втРасчетныеСчета)) КАК фмОстаткиНаРасчетныхСчетахОстаткиИОбороты
				|		ПО ВТ_Дни.ДатаКалендаря >= фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.Период
				|
				|СГРУППИРОВАТЬ ПО
				|	фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.РасчетныйСчет,
				|	ВТ_Дни.ДатаКалендаря,
				|	фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.Валюта,
				|	фмОстаткиНаРасчетныхСчетахОстаткиИОбороты.РасчетныйСчет.ВалютаСчета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	втОстаткиНаНачалоДня.Период КАК Период,
				|	втОстаткиНаНачалоДня.РасчетныйСчет КАК РасчетныйСчет,
				|	втОстаткиНаНачалоДня.ВалютаСчета КАК ВалютаСчета,
				|	СУММА(втОстаткиНаНачалоДня.СуммаОстаток1) КАК СуммаОстаток1,
				|	СУММА(втОстаткиНаНачалоДня.СуммаОстатокДоллары1) КАК СуммаОстатокДоллары1,
				|	СУММА(втОстаткиНаНачалоДня.СуммаОстаток2) КАК СуммаОстаток2,
				|	СУММА(втОстаткиНаНачалоДня.СуммаОстатокДоллары2) КАК СуммаОстатокДоллары2
				|ИЗ
				|	втОстаткиНаНачалоДня КАК втОстаткиНаНачалоДня
				|ГДЕ
				|	(втОстаткиНаНачалоДня.СуммаОстаток1 <> 0
				|			ИЛИ втОстаткиНаНачалоДня.СуммаОстаток2 <> 0)
				|
				|СГРУППИРОВАТЬ ПО
				|	втОстаткиНаНачалоДня.Период,
				|	втОстаткиНаНачалоДня.РасчетныйСчет,
				|	втОстаткиНаНачалоДня.ВалютаСчета
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период,
				|	втОстаткиНаНачалоДня.ВалютаСчета,
				|	втОстаткиНаНачалоДня.РасчетныйСчет.Наименование";
	           
	Запрос.УстановитьПараметр("Дата1", дДата1);
	Запрос.УстановитьПараметр("Дата2", дДата2);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Период");

    ВалютаСчетаНеЗаданаМассив = Новый Массив;
    
	Для каждого стрТЗ из тз Цикл 
        
        Если Не ЗначениеЗаполнено(стрТЗ.ВалютаСчета) Тогда
            ВалютаСчетаНеЗаданаМассив.Добавить(стрТЗ.РасчетныйСчет);    
        Иначе    
            // Важный момент. Сумма на начало периода берется по старому курсу на вчерашний день.
    		стрКурсыВалют1 = ПолучитьКурсыВалютПоПериоду(сОсновныеВалюты,тзКурсыВалют,НачалоДня(НачалоДня(стрТЗ.Период)-1));
    		стрТЗ.СуммаОстатокДоллары1 = ПолучитьСуммуВДолларах(стрТЗ.СуммаОстаток1,стрТЗ.ВалютаСчета,стрКурсыВалют1,сОсновныеВалюты);
    		// Курс на конец периода, как курс на начало периода.
    		стрКурсыВалют2 = ПолучитьКурсыВалютПоПериоду(сОсновныеВалюты,тзКурсыВалют,стрТЗ.Период);
    		стрТЗ.СуммаОстатокДоллары2 = ПолучитьСуммуВДолларах(стрТЗ.СуммаОстаток2,стрТЗ.ВалютаСчета,стрКурсыВалют2,сОсновныеВалюты);
        КонецЕсли; 
			
	КонецЦикла;
    
    ВалютаСчетаНеЗаданаМассив = фуОбщийСервер.УдалитьДублиИзМассива(ВалютаСчетаНеЗаданаМассив);
    
    // Обработка ошибок:
    Для каждого РасчетныйСчетСсылка Из ВалютаСчетаНеЗаданаМассив Цикл
        Сообщить("Внимание! В расчетном счете: "+РасчетныйСчетСсылка+
             " не задана валюта счета. Для корректного формирования отчета задайте валюту.");
        Отказ = Истина;
    КонецЦикла; 

	Возврат тз;	
	
КонецФункции

