
// Функция - Получает предопределенный элемент пользовательских настроек.
//
// Параметры:
//  ЭлементНастроекВарианта   - элемент настроек варианта СКД.
//  ПользовательскиеНастройки - пользовательские настройки СКД.
Функция ПолучитьПредопределенныйЭлементПользовательскихНастроек(ЭлементНастроекВарианта, ПользовательскиеНастройки) Экспорт
    
    НайденныйЭлемент = Неопределено;
    
    Если ЭлементНастроекВарианта <> Неопределено Тогда
        
        НайденныйЭлемент = ПользовательскиеНастройки.Элементы.Найти(ЭлементНастроекВарианта.ИдентификаторПользовательскойНастройки);
        
    КонецЕсли;
        
    Возврат НайденныйЭлемент;
    
КонецФункции

// Функция - Получает значение пользовательского параметра в отчете на СКД по его имени.
//
// Параметры:
//  ИмяПараметра     - строка - имя параметра в запросе.
//  КомпоновщикНастроек - компоновщик настроек - компоновщик настроек отчета.
Функция ПолучитьПользовательскийПараметр(ИмяПараметра, КомпоновщикНастроек) Экспорт
    
    НайденныйПараметр = Неопределено;
    
    НайденныйПараметрВарианта = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
    
    Если НайденныйПараметрВарианта <> Неопределено Тогда
        
        НайденныйПараметр = ПолучитьПредопределенныйЭлементПользовательскихНастроек(НайденныйПараметрВарианта, КомпоновщикНастроек.ПользовательскиеНастройки);
        
    КонецЕсли;
    
    Возврат НайденныйПараметр;
    
КонецФункции

// Получает параметры (структуру) для отчетов для собственников по-умолчанию: 
Функция ПолучитьПараметрыОтчетовДляСобсвтенников() Экспорт
	
	ПараметрыОтчетов = Новый Структура;
	ПараметрыОтчетов.Вставить("ПериодВОтчете", Новый СтандартныйПериод);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фуНастрокиОтчетовДляСобсвенников.ДатаНачала КАК ДатаНачала,
		|	фуНастрокиОтчетовДляСобсвенников.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	РегистрСведений.фуНастрокиОтчетовДляСобсвенников КАК фуНастрокиОтчетовДляСобсвенников";
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
	ПараметрыОтчетов.ПериодВОтчете.ДатаНачала = НачалоМесяца(ТекущаяДата());
	ПараметрыОтчетов.ПериодВОтчете.ДатаОкончания = КонецМесяца(ТекущаяДата());
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПараметрыОтчетов.ПериодВОтчете.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаНачала;
		ПараметрыОтчетов.ПериодВОтчете.ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
	КонецЦикла;
	
	Возврат ПараметрыОтчетов;  
	
КонецФункции

// +++ Чесноков М.С. 2020-12-24 F1-36
// Получить табличный документ на основании таблицы значений
//
// Параметры:
//  Таблица     - ТаблицаЗначений 
// 
// Возвращаемое значение:
//  ТабличныйДокумент 
//
Функция ПолучитьТабличныйДокумент(Таблица) Экспорт
    
    ТабДокумент = Новый ТабличныйДокумент;
    
    // Выводим заголовок таблицы
    КолонкаИндекс = 0;
    Пока КолонкаИндекс < Таблица.Колонки.Количество() Цикл
        Колонка = Таблица.Колонки[КолонкаИндекс];
        ТабДокумент.Область(1, КолонкаИндекс + 1, 1, КолонкаИндекс + 1).Текст = Колонка.Имя;  
        КолонкаИндекс = КолонкаИндекс + 1;
    КонецЦикла;
    
    // Выводим строки таблицы
    СтрокаИндекс = 0;
    Пока СтрокаИндекс < Таблица.Количество() Цикл
        Таблица_Строка = Таблица[СтрокаИндекс];
        КолонкаИндекс = 0;
        Пока КолонкаИндекс < Таблица.Колонки.Количество() Цикл
            Колонка = Таблица.Колонки[КолонкаИндекс];
            ТабДокумент.Область(СтрокаИндекс + 2, КолонкаИндекс + 1, СтрокаИндекс + 2, КолонкаИндекс + 1).Текст = Формат(Таблица_Строка[Колонка.Имя], "ЧГ=0");
            КолонкаИндекс = КолонкаИндекс + 1;
        КонецЦикла;        
        СтрокаИндекс = СтрокаИндекс + 1;
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции
// --- Чесноков М.С. 2020-12-24 F1-36 

