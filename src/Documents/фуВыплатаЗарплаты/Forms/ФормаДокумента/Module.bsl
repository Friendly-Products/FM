#Область о // Стандартные процедуры и функции:

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
    фуОбщийСервер.УстановитьДоступоностьРеквизитовНаФорме(Элементы);    
КонецПроцедуры    

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОстаткамНачисленнойЗарплатыНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.РасчетныйСчет) Тогда
		
		фуОбщийКлиентСервер.СообщитьПользователю("Внимание! Не заполнен расчетный счет. Операция прервана.");
		Возврат;
		
	КонецЕсли;
	
	ссВалютаСчета = Объект.РасчетныйСчет.ВалютаСчета; 
	Если Не ЗначениеЗаполнено(ссВалютаСчета) Тогда
		
		фуОбщийКлиентСервер.СообщитьПользователю("Внимание! Не заполнена валюта счета. Операция прервана.");
		Возврат;
		
	КонецЕсли;
	
	Объект.Выплата.Очистить();
	 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фуНачисленияУдержанияПоСотрудникамОстатки.Сотрудник КАК Сотрудник,
		|	фуНачисленияУдержанияПоСотрудникамОстатки.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
		|	фуНачисленияУдержанияПоСотрудникамОстатки.Валюта КАК Валюта,
		|	фуНачисленияУдержанияПоСотрудникамОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.фуНачисленияУдержанияПоСотрудникам.Остатки(, Валюта = &Валюта) КАК фуНачисленияУдержанияПоСотрудникамОстатки";
	
	Запрос.УстановитьПараметр("Валюта",ссВалютаСчета);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		стрНачисления = Объект.Выплата.Добавить();
		ЗаполнитьЗначенияСвойств(стрНачисления,ВыборкаДетальныеЗаписи);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткамНачисленнойЗарплаты(Команда)
	ЗаполнитьПоОстаткамНачисленнойЗарплатыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.ПроцентКомиссии = 0 Тогда
		ДокОбъект = РеквизитФормыВЗначение("Объект");
		Объект.ПроцентКомиссии = ДокОбъект.ПолучитьПроцентКомиссииПоУмолчанию();
	КонецЕсли;		

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКурсНаДатуДокумента(Команда)
	ЗагрузитьКурсНаДатуДокументаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьКурсНаДатуДокументаНаСервере()
	
	стрОсновныеВалюты 	= фуОперацииСВалютамиКлиентСервер.ПолучитьОсновныеВалютыСервер();
	Объект.КурсДоллар	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(стрОсновныеВалюты.Доллар, Объект.Дата).Курс;
	Объект.КурсЕвро 	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(стрОсновныеВалюты.Евро, Объект.Дата).Курс;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКомиссию(Команда)
	
	ТекстВопроса = "Внимание! Комиссия в документе будет пересчитана. Продолжить?";
	
    ПоказатьВопрос(
      Новый ОписаниеОповещения("ОбновитьКомиссиюНаКлиентеДиалог", ЭтотОбъект),
      ТекстВопроса, 
      РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКомиссиюНаКлиентеДиалог(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОбновитьКомиссиюНаСервере();	
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ОбновитьКомиссиюНаСервере()
	
	Для каждого стрВыплата из Объект.Выплата Цикл
		
		стрВыплата.Комиссия =  стрВыплата.Сумма * Объект.ПроцентКомиссии / 100; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьСканДокумента(Команда)
    
    ТекущиеДанные = ЭтаФорма.Элементы.Выплата.ТекущиеДанные;
    
    Если ТекущиеДанные <> Неопределено Тогда
        
        Если ЗначениеЗаполнено(ТекущиеДанные.СканДокументаСсылка) Тогда
            ВопросОПерезаписиСканаНаКлиенте(ТекущиеДанные);
        Иначе
            ОткрытьОкноВыбораФайлаКартинкиНаКлиенте(ТекущиеДанные);    
        КонецЕсли; 

    КонецЕсли;    

КонецПроцедуры

&НаКлиенте
Процедура ВопросОПерезаписиСканаНаКлиенте(ТекущиеДанные)
    
    ДополнительныеПараметры = Новый Структура;
    ДополнительныеПараметры.Вставить("ТекущиеДанные",ТекущиеДанные);

    Оповещение = Новый ОписаниеОповещения("ПослеВопросОПерезаписиСкана",ЭтотОбъект,ДополнительныеПараметры);	
 
    ПоказатьВопрос(Оповещение,
                   НСтр("ru = 'В табличной части загружен скан документа. Перезаписать?';"
                      + " es = 'El documento tiene un escaneo del documento cargado. Sobrescribir?'"),
                   РежимДиалогаВопрос.ДаНет,
                   0, // таймаут в секундах
                   КодВозвратаДиалога.Нет, // (необ.) кнопка по умолчанию
                   "Сообщение пользователю" // (необ.) заголовок
                   );                 

КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросОПерезаписиСкана(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
        ОткрытьОкноВыбораФайлаКартинкиНаКлиенте(Параметры.ТекущиеДанные);    
    КонецЕсли;	
 
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОкноВыбораФайлаКартинкиНаКлиенте(ТекущиеДанные)
    
    // Из файла с клиента
    ПараметрыДиалога = Новый Структура;
    ПараметрыДиалога.Вставить("Заголовок", НСтр("ru = 'Укажите файл со сканом.'"));
    ПараметрыДиалога.Вставить("Фильтр", НСтр("ru = 'Все файлы (*.*)'") + "|*.*");

    ДополнительныеПараметры = Новый Структура;
    ДополнительныеПараметры.Вставить("ТекущиеДанные",ТекущиеДанные);

    Оповещение = Новый ОписаниеОповещения("ПрикрепитьСканДокументаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
    ОбменДаннымиКлиент.ВыбратьИПередатьФайлНаСервер(Оповещение, ПараметрыДиалога, УникальныйИдентификатор);

КонецПроцедуры    
            
&НаКлиенте
Процедура ПрикрепитьСканДокументаЗавершение(Знач РезультатПомещенияФайлов, Знач ДополнительныеПараметры) Экспорт
	
	АдресПомещенногоФайла = РезультатПомещенияФайлов.Хранение;
	ТекстОшибки           = РезультатПомещенияФайлов.ОписаниеОшибки;
	
	Если ПустаяСтрока(ТекстОшибки) И ПустаяСтрока(АдресПомещенногоФайла) Тогда
		ТекстОшибки = НСтр("ru = 'Ошибка передачи файла настроек синхронизации данных на сервер'");
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
		
	// Успешно передали файл, загружаем на сервере.
	ЧастиИмени = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(РезультатПомещенияФайлов.Имя);
    ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные; 
    
    УстановитьКартинкуНаСервере(АдресПомещенногоФайла,ТекущиеДанные.СканДокументаСсылка,ТекущиеДанные.НомерСтроки-1);
    
    ЭтаФорма.Прочитать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКартинкуНаСервере(ПутьФайла,СканДокументаСсылка,НомерСтроки)
    
    ТекущиеДанные = Объект.Выплата[НомерСтроки]; 
    
    СканДокументаОбъект = фуОбщийСервер.ПолучитьОбъектСканаПоСсылке(СканДокументаСсылка,
                                                                    Объект.Ссылка,
                                                                    ТекущиеДанные.Сотрудник,
                                                                    ТекущиеДанные.СканДата,
                                                                    ПутьФайла);
    Если СканДокументаОбъект = Неопределено Тогда
    	Возврат;
    КонецЕсли;                                                                 
                                                                    
    ТекущиеДанные.СканДокументаСсылка = СканДокументаОбъект.Ссылка;
    ТекущиеДанные.СканДокумента = "+";
    
    ПараметрыЗаписи = Новый Структура;
    ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
    ЭтаФорма.Записать(ПараметрыЗаписи);
    
КонецПроцедуры

&НаКлиенте
Процедура ВыплатаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
    
    Если НоваяСтрока Тогда
        
        Элемент.ТекущиеДанные.СканДата = Неопределено;
    	Элемент.ТекущиеДанные.СканДокумента = Неопределено;
    	Элемент.ТекущиеДанные.СканДокументаСсылка = Неопределено;
        
    КонецЕсли; 

КонецПроцедуры

#КонецОбласти

#Область о // Стандартные подсистемы:

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

#КонецОбласти

#Область о // Дополнительные процедуры и функции:

&НаКлиенте
Процедура ВыплатаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    Если Поле.Имя = "ВыплатаСканДокумента" Тогда
        
        Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.СканДокументаСсылка) Тогда
            фуОбщийКлиент.ОткрытьФормуСканаДокументаНаКлиенте(Элемент.ТекущиеДанные.СканДокументаСсылка);
        Иначе
            ПрикрепитьСканДокумента(Неопределено);
        КонецЕсли; 
        
    КонецЕсли; 
    
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрСканаДокумента(Команда)
    
    ТекущиеДанные = ЭтаФорма.Элементы.Выплата.ТекущиеДанные;
    
    Если ТекущиеДанные <> Неопределено Тогда
        
        фуОбщийКлиент.ОткрытьФормуСканаДокументаНаКлиенте(ТекущиеДанные.СканДокументаСсылка);
        
    КонецЕсли;    
        
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСканДокумента(Команда)
    
    ТекущиеДанные = ЭтаФорма.Элементы.Выплата.ТекущиеДанные;
    Если ТекущиеДанные <> Неопределено Тогда
        
        Если Не ЗначениеЗаполнено(ТекущиеДанные.СканДокументаСсылка) Тогда
        	Возврат;
        КонецЕсли; 
        
        ДополнительныеПараметры = Новый Структура;
        ДополнительныеПараметры.Вставить("ТекущиеДанные",ТекущиеДанные);

        Оповещение = Новый ОписаниеОповещения("ПослеУдалитьСканДокумента",ЭтотОбъект,ДополнительныеПараметры);	
 
        ПоказатьВопрос(Оповещение,
                       НСтр("ru = 'В табличной части загружен скан документа. Удалить?';"
                          + "es = 'En la parte de la tabla, se carga un escaneo del documento. ¿Borrar?'"),
                       РежимДиалогаВопрос.ДаНет,
                       0, // таймаут в секундах
                       КодВозвратаДиалога.Нет, // (необ.) кнопка по умолчанию
                       "Сообщение пользователю" // (необ.) заголовок
                      );    

   КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеУдалитьСканДокумента(Результат, Параметры) Экспорт
    
    ТекущиеДанные = Параметры.ТекущиеДанные;
    
    Если Результат = КодВозвратаДиалога.Да Тогда
        фуОбщийСервер.УдалитьСканДокументаНаСервере(ТекущиеДанные.СканДокументаСсылка);
        ТекущиеДанные.СканДата = Неопределено;
        ТекущиеДанные.СканДокумента = Неопределено;
        ТекущиеДанные.СканДокументаСсылка = Неопределено;
    КонецЕсли;	
 
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущимиСотрудниками(Команда)
	
	// +++ Чесноков М.С. 2021-10-07 F1-123
	ЗаполнитьТекущимиСотрудникамиНаСервере();
	// --- Чесноков М.С. 2021-10-07 F1-123 
	
КонецПроцедуры

// +++ Чесноков М.С. 2021-10-07 F1-123
&НаСервере
Процедура ЗаполнитьТекущимиСотрудникамиНаСервере()
	
	ДанныеСтруктура = Новый Структура;
	ДанныеСтруктура.Вставить("Организация");
	ДанныеСтруктура.Вставить("Отдел");
	ДанныеСтруктура.Вставить("Дата1",НачалоМесяца(Объект.ДатаВыплаты));
	ДанныеСтруктура.Вставить("Дата2",КонецМесяца(Объект.ДатаВыплаты));   
	ДанныеСтруктура.Вставить("СотрудникиМассив");

	ЗаполнитьЗначенияСвойств(ДанныеСтруктура,Объект);
	
	Если Не ЗначениеЗаполнено(ДанныеСтруктура.ЛокацииМассив) Тогда
		
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		
	КонецЕсли; 
	
	СотрудникиТаблица = фуКадровыйУчетСервер.ПолучитьТаблицуЗначенийДляЗаполнения_Сотрудники(ДанныеСтруктура);

	Объект.Выплата.Очистить();
	Если Объект.ВидЗарплаты = Перечисления.фуВидЗарплаты.Зарплата Тогда
		ВидНачисления = Справочники.фуВидыНачислений.НайтиПоКоду("000000002"); // Зарплата
	Иначе
		ВидНачисления = Справочники.фуВидыНачислений.НайтиПоКоду("000000001"); // Аванс
	КонецЕсли; 
	
	Для каждого СотрудникиСтрока Из СотрудникиТаблица Цикл
		
		ВыплатаСтрока = Объект.Выплата.Добавить();
		ЗаполнитьЗначенияСвойств(ВыплатаСтрока,СотрудникиСтрока);
		ВыплатаСтрока.ВидНачисленияУдержания = ВидНачисления;
		
	КонецЦикла; 
	
КонецПроцедуры
// --- Чесноков М.С. 2021-10-07 F1-123 

#КонецОбласти 

