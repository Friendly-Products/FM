
#Область о // Стандартные процедуры и функции:

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
    // +++ Чесноков М.С. 2021-07-08 F1-15
    НастройкаОтображенийДанныхНаФорме();
    // --- Чесноков М.С. 2021-07-08 F1-15 
    
КонецПроцедуры

// +++ Чесноков М.С. 2021-07-08 F1-15
&НаСервере
Процедура НастройкаОтображенийДанныхНаФорме()
    
    Если НЕ РольДоступна("ПолныеПрава") Тогда
    	Элементы.ГруппаДанныеСотрудников.Видимость = Ложь;
    	Элементы.ГруппаСотрудникиРасчет.Видимость = Ложь;
    КонецЕсли; 
    
КонецПроцедуры
// --- Чесноков М.С. 2021-07-08 F1-15 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоРаботающимСотрудникамНаСервере()
	
	Объект.Начисления.Очистить();
	
	// В итоговую таблицу попадают:
	//  1. Дата трудоустройства обязательно заполнена.
	//	2. Только работающие сотрудники (без даты увольнения).
	//	3. Уволенные будущими периодами (для начисления ЗП задним числом).
	//	4. Принятые в текущем периоде.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фмСотрудники.Ссылка КАК Сотрудник,
		|	фмСотрудники.Отдел КАК Отдел,
		|	фмСотрудники.ДатаПриемаНаРаботу КАК ДатаПриемаНаРаботу,
		|	фмСотрудники.ДатаУвольнения КАК ДатаУвольнения,
		|	фмСотрудники.ВалютаВыплатыЗарплаты КАК Валюта,
		|	фмСотрудники.ОкладУправленческий КАК Сумма
		|ИЗ
		|	Справочник.фмСотрудники КАК фмСотрудники
		|ГДЕ
		|	фмСотрудники.ДатаПриемаНаРаботу <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	И (фмСотрудники.ДатаПриемаНаРаботу <= &ДатаНачисления
		|				И фмСотрудники.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ИЛИ фмСотрудники.ДатаПриемаНаРаботу <= &ДатаНачисления
		|				И фмСотрудники.ДатаУвольнения >= &ДатаНачисления
		|			ИЛИ НАЧАЛОПЕРИОДА(фмСотрудники.ДатаПриемаНаРаботу, МЕСЯЦ) = &ДатаНачисления
		|				И НАЧАЛОПЕРИОДА(фмСотрудники.ДатаУвольнения, МЕСЯЦ) <> &ДатаНачисления)";
	
	Запрос.УстановитьПараметр("ДатаНачисления", НачалоМесяца(Объект.ПериодНачисления));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		стрНачисления = Объект.Начисления.Добавить();
		ЗаполнитьЗначенияСвойств(стрНачисления,ВыборкаДетальныеЗаписи);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРаботающимСотрудникам(Команда)
	
	ЗаполнитьПоРаботающимСотрудникамНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВалютуНачисленияЗарплаты(стрПараметры)
	
	ссВалюта = Справочники.Валюты.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(стрПараметры.ВидНачисленияУдержания.Валюта) Тогда
		
		ссВалюта = стрПараметры.ВидНачисленияУдержания.Валюта; 
		
	ИначеЕсли ЗначениеЗаполнено(стрПараметры.Сотрудник.ВалютаВыплатыЗарплаты) Тогда
		
		ссВалюта = стрПараметры.Сотрудник.ВалютаВыплатыЗарплаты; 
		
	КонецЕсли;

	Возврат ссВалюта; 
	
КонецФункции

&НаКлиенте
Процедура УстановитьВалютуВыплатыЗарплаты()
	
	Попытка 
		
		ТекущиеДанные = ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
		
		стрПараметры = Новый Структура;
		стрПараметры.Вставить("Сотрудник",ТекущиеДанные.Сотрудник);
		стрПараметры.Вставить("ВидНачисленияУдержания",ТекущиеДанные.ВидНачисленияУдержания);
		
		ТекущиеДанные.Валюта = ПолучитьВалютуНачисленияЗарплаты(стрПараметры);
		
	Исключение
		
	КонецПопытки;		

КонецПроцедуры

&НаКлиенте
Процедура НачисленияСотрудникПриИзменении(Элемент)
	
	УстановитьВалютуВыплатыЗарплаты();
	
КонецПроцедуры

&НаКлиенте
Процедура УдержанияСотрудникПриИзменении(Элемент)
	
	УстановитьВалютуВыплатыЗарплаты();
	
КонецПроцедуры

// +++ Чесноков М.С. 2020-11-18 F1-22
&НаКлиенте
Процедура ЗаполнитьПоТекущемуЗначению(Команда)
    
    ИмяПоля = Элементы.Начисления.ТекущийЭлемент.Имя;
    ЗадатьВопрос = Ложь;
    
    ПолеВТабличнойЧасти = "";
    Если (ИмяПоля = "НачисленияСтатьяЗатрат") Тогда
        ЗадатьВопрос = Истина;
        ПолеВТабличнойЧасти = "СтатьяЗатрат";
    ИначеЕсли (ИмяПоля = "НачисленияВидНачисления") Тогда    
        ЗадатьВопрос = Истина;
        ПолеВТабличнойЧасти = "Начисление";
	КонецЕсли;
    
    Если ЗадатьВопрос Тогда
        
		ДопПараметры = Новый Структура;
        ДопПараметры.Вставить("ИмяПоля",ПолеВТабличнойЧасти);
        ДопПараметры.Вставить("ТекущееЗначение",Элементы.Начисления.ТекущиеДанные[ПолеВТабличнойЧасти]);
		
		ТекстВопроса = НСтр("ru = 'Заполнить по текущему значению?'");
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьСпискомТЧНачислениеЗавершение", ЭтотОбъект, ДопПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

    КонецЕсли; 
    
КонецПроцедуры
// --- Чесноков М.С. 2020-11-18 F1-22

// +++ Чесноков М.С. 2020-11-18 F1-22
&НаКлиенте
Процедура ВопросЗаполнитьСпискомТЧНачислениеЗавершение(Знач Результат, Знач ДопПараметры) Экспорт
    
   	Если Результат = КодВозвратаДиалога.Да Тогда
	
		ИмяПоля = ДопПараметры.ИмяПоля;
        ТекущееЗначение = ДопПараметры.ТекущееЗначение; 
	
		КолВо = Объект.Начисления.Количество()-1;
		СчЦикла = 0;
        Для СчЦикла = 0 По КолВо Цикл
            
            Если Не ЗначениеЗаполнено(Элементы.Начисления.ДанныеСтроки(СчЦикла)[ИмяПоля]) Тогда
                Элементы.Начисления.ДанныеСтроки(СчЦикла)[ИмяПоля] = ТекущееЗначение;	
            ИначеЕсли Не ЗначениеЗаполнено(ТекущееЗначение) Тогда    
                Элементы.Начисления.ДанныеСтроки(СчЦикла)[ИмяПоля] = ТекущееЗначение;
            КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
 
КонецПроцедуры
// --- Чесноков М.С. 2020-11-18 F1-22

// +++ Чесноков М.С. 2021-08-10 F1-15
&НаКлиенте
Процедура РасшифровкаРасчета(Команда)
    
	НачислениеВыделеннаяСтрока = Элементы.Начисления.ТекущиеДанные;
	Если НачислениеВыделеннаяСтрока = Неопределено Тогда
		Возврат;
    КонецЕсли;
    
	СотрудникиМассив = Новый Массив;
	СотрудникиМассив.Добавить(НачислениеВыделеннаяСтрока.Сотрудник);	
	
	ТабличныйДокумент = ПолучитьРезультатРасчетаСервер(СотрудникиМассив);
    Если ТабличныйДокумент <> Неопределено Тогда
		фуОтчетыКлиентФинансовыйУчет.ПечатьТабличногоДокумента(ТабличныйДокумент,"Расшифровка расчет зарплаты (Москва)",ЭтаФорма);	
    КонецЕсли; 
    
КонецПроцедуры
// --- Чесноков М.С. 2021-08-10 F1-15

#КонецОбласти

#Область о // Стандартные подсистемы:

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаСервере 
Функция ПолучитьВалютуПоВидуНачисленияНаСервере(ВидНачисления)
	
	Возврат ВидНачисления.Валюта;
	
КонецФункции

&НаСервере 
Функция ПолучитьСтатьюЗатратПоВидуНачисленияНаСервере(ВидНачисленияУдержания)
	
	Возврат ВидНачисленияУдержания.СтатьяЗатрат;
	
КонецФункции	

&НаКлиенте
Процедура НачисленияВидНачисленияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;	
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Начисление) Тогда
			ТекущиеДанные.Валюта = ПолучитьВалютуПоВидуНачисленияНаСервере(ТекущиеДанные.Начисление);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.СтатьяЗатрат) Тогда
			ТекущиеДанные.СтатьяЗатрат = ПолучитьСтатьюЗатратПоВидуНачисленияНаСервере(ТекущиеДанные.Начисление);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьМассивСотрудников()
	
	массСотрудники = Новый Массив;
	Для каждого стрНачисления из Объект.Начисления Цикл
		массСотрудники.Добавить(стрНачисления.Сотрудник);	
	КонецЦикла;
	
	Возврат массСотрудники;
	
КонецФункции

&НаКлиенте
Процедура ВопросРаспечататьРасчетныеЛисткиЗавершение(Результат, Объект) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПараметрыЗаписи = Новый Структура;
        ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
        ЭтаФорма.Записать(ПараметрыЗаписи);
		
		ПечатьРасчетногоЛистка();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьРасчетногоЛистка()
	
	массСотрудники = ПолучитьМассивСотрудников();
	тдРасчетныеЛистки = фуНачислениеЗарплатыСервер.ПолучитьТабличныйДокументРасчетныеЛистки(НачалоМесяца(Объект.ПериодНачисления),КонецМесяца(Объект.ПериодНачисления),массСотрудники);
	фуОтчетыКлиентФинансовыйУчет.ПечатьТабличногоДокумента(тдРасчетныеЛистки,"Расчетные листки",ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетныеЛистки(Команда)
	
	Если Не Объект.Проведен Тогда
		
		ТекстВопроса = НСтр("ru = 'Перед печатью отчета необходимо провести документ. Провести?'");
		Оповещение = Новый ОписаниеОповещения("ВопросРаспечататьРасчетныеЛисткиЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ПечатьРасчетногоЛистка();
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область о // Расчет зарплаты:

&НаКлиенте
Процедура РасчетЗПМосква(Команда)
    
   ЕстьДанные = Объект.Начисления.Количество() > 0
		     ИЛИ Объект.Удержания.Количество() > 0;
    
	Если ЕстьДанные Тогда
		ТекстВопроса = НСтр("ru = 'Перед заполнением табличные части будут очищены. Заполнить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросРасчетЗПМоскваЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьРасчетЗПМоскваНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВопросРасчетЗПМоскваЗавершение(Результат, ИмяТабЧасти) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
        ВыполнитьРасчетЗПМоскваНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРасчетЗПМоскваНаСервере()
    
    Если Не ЗначениеЗаполнено(Объект.ВидЗарплаты) Тогда
        Сообщить("Не задан вид зарплаты. Заполнение документа прервано.");
        Возврат;    	
    КонецЕсли; 
    
    УстановитьПривилегированныйРежим(Истина);
    
 	ДокОбъект = РеквизитФормыВЗначение("Объект");
	стрДанныеНачисленияЗарплаты = фуНачислениеЗарплатыСервер.ПолучитьСтрукруруДанныхНачисленияЗарплатыМСК(ДокОбъект);
	
	МенеджерРасчета = Обработки.фмРасчетЗаработнойПлатыМск.Создать();
	МенеджерРасчета.Инициализация();
    
    Если Объект.Начисления.Количество() <> 0 Тогда
        Для каждого НачислениеСтрока Из Объект.Начисления Цикл
            стрДанныеНачисленияЗарплаты.СотрудникиМассив.Добавить(НачислениеСтрока.Сотрудник);
        КонецЦикла; 
    КонецЕсли; 
    
	МенеджерРасчета.ИсходныеДанные = стрДанныеНачисленияЗарплаты;
	МенеджерРасчета.ВыполнитьРасчетЗаработнойПлаты();
	
	ДокОбъект = МенеджерРасчета.ИсходныеДанные.ОбъектНачисленияЗарплаты; 
    ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
    
    УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСотрудникаМСК(Команда)
        
    ПересчитатьСотрудниковНаСервере(Элементы.Начисления.ТекущиеДанные.Сотрудник);
    
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСотрудниковНаСервере(СотрудникСсылка)
    
    УстановитьПривилегированныйРежим(Истина);
    
    Если Не ЗначениеЗаполнено(СотрудникСсылка) Тогда
    	Возврат;
    КонецЕсли; 
    
 	ДокОбъект = РеквизитФормыВЗначение("Объект");
    ДокОбъект.ПересчетСотрудниковВОбъекте(СотрудникСсылка,Истина);
    ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
   
    ЭтотОбъект.Модифицированность = Истина;
    
    УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
    фуОбщийСервер.УстановитьДоступоностьРеквизитовНаФорме(Элементы);    
КонецПроцедуры    

&НаКлиенте
Процедура РасчетСуммыВНачислениях()
    
    ТекущиеДанные  = Элементы.Начисления.ТекущиеДанные;
    
    Если ТекущиеДанные <> Неопределено Тогда
    	ТекущиеДанные.Сумма = ТекущиеДанные.ЧасоваяСтавка * ТекущиеДанные.ЧасыФакт;
    КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура НачисленияЧасоваяСтавкаПриИзменении(Элемент)
    РасчетСуммыВНачислениях();
КонецПроцедуры

&НаКлиенте
Процедура НачисленияЧасыФактПриИзменении(Элемент)
    РасчетСуммыВНачислениях();
КонецПроцедуры

#КонецОбласти

#Область о // Печать отчетов:

&НаСервере
Функция ПолучитьРезультатРасчетаСервер(СотрудникиМассив) 
	
	МенеджерПечати = Обработки.фуРасшифровкаРезультатовРасчета.Создать();
	Если Не ЗначениеЗаполнено(СотрудникиМассив) Тогда
		
		СотрудникиМассив = Новый Массив;
		Для каждого СотрудникСтрока из Объект.Начисления Цикл
			СотрудникиМассив.Добавить(СотрудникСтрока.Сотрудник);
		КонецЦикла;
		
		МенеджерПечати.СотрудникиМассив = СотрудникиМассив;
		
	Иначе
		
		МенеджерПечати.СотрудникиМассив = СотрудникиМассив;
		
	КонецЕсли;
	
	МенеджерПечати.ДокументОбъект = Объект;
	ТабличныйДокумент = МенеджерПечати.ПолучитьРезультатРасчета();

	Возврат ТабличныйДокумент;	
	
КонецФункции

#КонецОбласти



   
