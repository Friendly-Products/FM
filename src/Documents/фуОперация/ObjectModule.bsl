#Область о // Служебные процедуры и функции:

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//РасчетКурсовОбменаНаСервере();
	РасчетДопРеквизитов();	
	
КонецПроцедуры   

Процедура ПриЗаписи(Отказ)
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	ЭтотОбъект.ВалютаУправленческогоУчета = Константы.фуВалютаУправленческогоУчета.Получить();
	
КонецПроцедуры

#КонецОбласти           

#Область о // Обработка проведения:

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//ПроверкаВозможностиПроведенияДокумента(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;  
	
	//
	сОсновныеВалюты = фуОперацииСВалютамиКлиентСервер.ПолучитьОсновныеВалютыСервер();
	//
	
	ЗаписьДвижений_фуОстаткиНаРасчетныхСчетах(Отказ,РежимПроведения,сОсновныеВалюты);
	ЗаписьДвижений_фуДвиженияДенежныхСредств(Отказ,РежимПроведения,сОсновныеВалюты);
	ЗаписьДвижений_фуДоходыИРасходы(Отказ,РежимПроведения,сОсновныеВалюты);
	//ЗаписьДвижений_фуВзаиморасчетыСКонтрагентами(Отказ,РежимПроведения);
	
КонецПроцедуры

#Область о // Запись движений: "Остатки на расчетных счетах":

Процедура ЗаписьДвижений_фуОстаткиНаРасчетныхСчетах(Отказ,РежимПроведения,сОсновныеВалюты)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Движения.фуОстаткиНаРасчетныхСчетах.Записывать = Истина;
	
	Если ЭтотОбъект.СуммаПлатежа <> 0 Тогда 

		ВалютаСчета = ЭтотОбъект.РасчетныйСчет.ВалютаСчета; 
		
		Движение = Движения.фуОстаткиНаРасчетныхСчетах.Добавить();
		Если ЭтотОбъект.СуммаПлатежа > 0 Тогда
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Иначе
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		КонецЕсли;
		
		Движение.Период = ЭтотОбъект.Дата;
		Движение.РасчетныйСчет = ЭтотОбъект.РасчетныйСчет;

		Движение.Сумма = ЭтотОбъект.СуммаПлатежа;
		Если ЭтотОбъект.СуммаПлатежа < 0 Тогда
			Движение.Сумма = (-1) * Движение.Сумма;	
		КонецЕсли;                               
		
		Движение.Основание = ""; 
		
	КонецЕсли;	
	
	//// Списываем с основого счета:
	//// (Два разных списания нужны для того, чтобы при конвертации суммы списания в долларах у нас не разошлись центы с регистром фмДвиженияДенежныхСредств).
	//
	//// Основная сумма:
	//Если ЭтотОбъект.СуммаРасхода <> 0 Тогда 
	//
	//	//
	//	ВалютаСчета = ЭтотОбъект.РасчетныйСчет.ВалютаСчета;
	//	//

	//	Движение = Движения.фуОстаткиНаРасчетныхСчетах.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//	Движение.Период = ЭтотОбъект.Дата;
	//	Движение.РасчетныйСчет = ЭтотОбъект.РасчетныйСчет;
	//	Движение.Валюта = ВалютаСчета;
	//	Движение.Сумма = ЭтотОбъект.СуммаРасхода;
	//	Движение.Основание = "Внутрифирменные расчеты"; 
	//	
	//КонецЕсли;
	//
	//// Получаем на корр. счет:
	//Если ЭтотОбъект.СуммаПрихода <> 0 Тогда 

	//	//
	//	ВалютаСчета = ЭтотОбъект.КоррСчёт.ВалютаСчета;
	//	//

	//	Движение = Движения.фуОстаткиНаРасчетныхСчетах.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	//	Движение.Период = ЭтотОбъект.Дата;
	//	Движение.РасчетныйСчет = ЭтотОбъект.КоррСчёт;
	//	Движение.Валюта = ВалютаСчета;
	//	Движение.Сумма = ЭтотОбъект.СуммаПрихода;
	//	Движение.Основание = "Внутрифирменные расчеты"; 
	//	
	//КонецЕсли;
	//	
	//// Комиссия:
	//Если ЭтотОбъект.КомиссияНаКонвертацию <> 0 Тогда 
	//
	//	//
	//	//СтатьяДДС_КомиссияЗаВходящиеПлатежи = Справочники.фуСтатьиЗатрат.НайтиПоКоду("003");
	//	РасчетныйСчетСсылка = ЭтотОбъект.РасчетныйСчет;
	//	//Если ЭтотОбъект.СтатьяЗатратНаКомиссию = СтатьяДДС_КомиссияЗаВходящиеПлатежи Тогда
	//	Если ЭтотОбъект.СтатьяЗатратНаКомиссию.ПереносЗатратНаКоррСчет Тогда
	//		РасчетныйСчетСсылка = ЭтотОбъект.КоррСчёт;	
	//	КонецЕсли;
	//	ВалютаСчета = РасчетныйСчет.ВалютаСчета;
	//	//
	//	
	//	Движение = Движения.фуОстаткиНаРасчетныхСчетах.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//	Движение.Период = ЭтотОбъект.Дата;
	//	Движение.РасчетныйСчет = РасчетныйСчетСсылка;
	//	Движение.Валюта = ВалютаСчета;
	//	Движение.Сумма = ЭтотОбъект.КомиссияНаКонвертацию;
	//	Движение.Основание = "Внутрифирменные расчеты: Комиссия"; 
	//	
	//КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область о // Запись движений: "Движения денежных средств":

Процедура ЗаписьДвижений_фуДвиженияДенежныхСредств(Отказ,РежимПроведения,сОсновныеВалюты)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.СуммаПлатежа = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.фуДвиженияДенежныхСредств.Записывать = Истина;
	ВалютаСумма = РаботаСКурсамиВалют.ПересчитатьВВалюту(ЭтотОбъект.СуммаПлатежа,
														 ЭтотОбъект.ВалютаОперации,
														 сОсновныеВалюты.Доллар,
														 ЭтотОбъект.Дата);

	Движение = Движения.фуДвиженияДенежныхСредств.Добавить();
	Движение.Период = ЭтотОбъект.Дата;
	Движение.СтатьяЗатрат = ЭтотОбъект.СтатьяЗатрат;
	Движение.ВалютаУправленческогоУчета = ЭтотОбъект.ВалютаУправленческогоУчета;
	Движение.Сумма = ВалютаСумма;
	Движение.Основание = ""; 
        
	//// Внутрифирменные расчеты:	
	//ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.фуВидыОпераций.ВнутрифирменныеРасчеты Тогда  	
	//	
	//	// Комиссия:
	//	Если ЭтотОбъект.КомиссияДоллары <> 0 Тогда
	//		
	//		Движение = Движения.фуДвиженияДенежныхСредств.Добавить();
	//		Движение.Период = ЭтотОбъект.Дата;
	//		Движение.СтатьяДДС = ЭтотОбъект.СтатьяЗатратНаКомиссию;
	//		Движение.СуммаДоллары = (-1)*ЭтотОбъект.КомиссияДоллары; // Комиссия для нас отрицательный оборот, так как расход
	//		Движение.Основание = Строка(ЭтотОбъект.ВидОперации)+": Комиссия"; 
	//		
	//	КонецЕсли;

	//	// Курсовая разница:
	//	Если ЭтотОбъект.КурсоваяРазницаДоллары <> 0 Тогда
	//		
	//		Движение = Движения.фуДвиженияДенежныхСредств.Добавить();
	//		Движение.Период = ЭтотОбъект.Дата;
	//		Движение.СтатьяДДС = ЭтотОбъект.СтатьяЗатрат;
	//		Движение.СуммаДоллары = ЭтотОбъект.КурсоваяРазницаДоллары; 
	//		Движение.Основание = Строка(ЭтотОбъект.ВидОперации)+": Курсовая разница";
	//		
	//	КонецЕсли;
	//	// 
	//		
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область о // Запись движений: "Доходы и расходы":

Процедура ЗаписьДвижений_фуДоходыИРасходы(Отказ,РежимПроведения,сОсновныеВалюты)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;     
	
	Если ЭтотОбъект.СуммаНачисленияВВалютеУУ = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	Движения.фуДоходыИРасходы.Записывать = Истина;
	
	СуммаВалюта = РаботаСКурсамиВалют.ПересчитатьВВалюту(ЭтотОбъект.СуммаНачисленияВВалютеУУ,
	                                                     ЭтотОбъект.ВалютаУправленческогоУчета,
														 сОсновныеВалюты.Доллар,
														 ЭтотОбъект.Дата); 
							
	Движение 				= Движения.фуДоходыИРасходы.Добавить();
    Движение.Период 		= ЭтотОбъект.Дата;
    Движение.СтатьяЗатрат	= ЭтотОбъект.СтатьяЗатрат;
    Движение.ВалютаУправленческогоУчета = ЭтотОбъект.ВалютаУправленческогоУчета;
	Движение.Сумма 			= СуммаВалюта; 
    //
    Движение.Контрагент		= ЭтотОбъект.Контрагент;
    Движение.Основание		= "";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область о // Вспомогательные процедуры и функции:

Процедура РасчетДопРеквизитов()
	
	// Вычисляемые поля:
	ЭтотОбъект.ОтображениеВнутрифирменныхРасчетов = ПолучитьОтоброжениеВнутрифирменныхРасчетов();
	ЭтотОбъект.ОтображениеРасчетныйСчет = ЭтотОбъект.РасчетныйСчет.Наименование;
    ЭтотОбъект.ОтображениеРасчетныйСчетСсылка = ЭтотОбъект.РасчетныйСчет;
	
	// Отредактировал:
	ЭтотОбъект.Отредактировал = Строка(Пользователи.ТекущийПользователь())+" - "+ТекущаяДата();	
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ВалютаОперации) Тогда
		ЭтотОбъект.ВалютаОперации = ЭтотОбъект.РасчетныйСчет.ВалютаСчета;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ВалютаУправленческогоУчета) Тогда
		ЭтотОбъект.ВалютаУправленческогоУчета = Константы.фуВалютаУправленческогоУчета.Получить();	
	КонецЕсли;  
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.КурсУправленческойВалюты) Тогда
		ЭтотОбъект.КурсУправленческойВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ЭтотОбъект.ВалютаУправленческогоУчета, ЭтотОбъект.Дата).Курс;
	КонецЕсли;                          
	
	ЭтотОбъект.КурсОперации = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ЭтотОбъект.ВалютаОперации, ЭтотОбъект.Дата).Курс;                          

	ЭтотОбъект.СуммаПлатежаВВалютеУУ = РасчитатьСуммуПлатежаВВалютеУУ(ЭтотОбъект.СуммаПлатежа,
	                                                                  ЭтотОбъект.КурсУправленческойВалюты,
		                                                              ЭтотОбъект.КурсОперации);
	
КонецПроцедуры     

Функция РасчитатьСуммуПлатежаВВалютеУУ(СуммаПлатежа,КурсУправленческойВалюты,КурсОперации) Экспорт
	
	СуммаПлатежаВВалютеУУ = 0;    
	Если КурсУправленческойВалюты <> 0 Тогда
		СуммаПлатежаВВалютеУУ = Окр(СуммаПлатежа * КурсОперации / КурсУправленческойВалюты,2);    
	КонецЕсли;
	
	Возврат СуммаПлатежаВВалютеУУ;

КонецФункции

Функция ПолучитьОтоброжениеВнутрифирменныхРасчетов()
	
	стрОтображение = "";                          
	
	Если ЗначениеЗаполнено(ЭтотОбъект.СуммаРасхода) ИЛИ ЗначениеЗаполнено(ЭтотОбъект.СуммаПрихода) Тогда

		Если ЗначениеЗаполнено(ЭтотОбъект.СуммаРасхода) Тогда
			стрОтображение = стрОтображение + ЭтотОбъект.СуммаРасхода + " ";	
		КонецЕсли;
		Если ЗначениеЗаполнено(ЭтотОбъект.РасчетныйСчет) Тогда
			стрОтображение = стрОтображение + ЭтотОбъект.РасчетныйСчет.ВалютаСчета + " ";	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭтотОбъект.СуммаПрихода) Тогда
			стрОтображение = стрОтображение + "-> " + ЭтотОбъект.СуммаПрихода + " ";	
		КонецЕсли;
		Если ЗначениеЗаполнено(ЭтотОбъект.КоррСчёт) Тогда
			стрОтображение = стрОтображение + ЭтотОбъект.КоррСчёт.ВалютаСчета;	
		КонецЕсли;
			
		Если стрОтображение = "" Тогда
			стрОтображение = ЭтотОбъект.Контрагент.Наименование;
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат стрОтображение; 
	
КонецФункции

#КонецОбласти        

