&НаКлиенте
Перем ЗакрытиеРазрешено;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗначенияФормыПоУмолчанию();
	ОбновитьСписокНаФорме();	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СброситьНастройкиОкнаУПользователя();
	
    ИдентификаторПользовательскойНастройки = "";
    ПолеПериод = Новый ПолеКомпоновкиДанных("Дата");
    Для каждого ЭлементОтбора Из Список.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
        Если ТипЗнч(ЭлементОтбора) <> Тип("ЭлементОтбораКомпоновкиДанных") Тогда
            Продолжить;
        КонецЕсли;     
        Если ЭлементОтбора.ЛевоеЗначение = ПолеПериод Тогда
            ИдентификаторПользовательскойНастройки = ЭлементОтбора.ИдентификаторПользовательскойНастройки;
        КонецЕсли; 
    КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура СброситьНастройкиОкнаУПользователя()
	
	КлючОбъекта = "Документ.фуОперация.Форма.ФормаСписка/НастройкиОкна";
	ХранилищеСистемныхНастроек.Удалить(КлючОбъекта,"", ИмяПользователя());
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВыборкиПриИзменении(Элемент)
	
	ОбновитьСписокНаФорме();	
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокНаФорме()
	
	УстановитьПараметрыСписка();
	СчитаемИтогиНаСервере();
	УстановитьВидимостьКолонок();
	
	Элементы.ЗначениеОтбора.Видимость = Ложь;
	Если ЗначениеЗаполнено(ЭтаФорма.ЗначениеОтбора) Тогда 
		Элементы.ЗначениеОтбора.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСписка()
	
	Список.Параметры.УстановитьЗначениеПараметра("Дата1", ПериодВыборки.ДатаНачала);
	Список.Параметры.УстановитьЗначениеПараметра("Дата2", ПериодВыборки.ДатаОкончания);
	Список.Параметры.УстановитьЗначениеПараметра("УказанРасчетныйСчет", ЗначениеЗаполнено(РасчетныйСчет));
	Список.Параметры.УстановитьЗначениеПараметра("ОтображениеРасчетныйСчет", РасчетныйСчет.Наименование);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияФормыПоУмолчанию()
	
	ПериодВыборки.ДатаНачала   	= НачалоМесяца(ТекущаяДата());
	ПериодВыборки.ДатаОкончания = КонецМесяца(ТекущаяДата());
	ВидФормы = "Развёрнутая форма";
	РасчетныйСчет = Справочники.фуРасчетныеСчета.ПустаяСсылка();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКолонок()
	
	// Установим видимость для всех элементов на форме:
	Для каждого ЭлементФормы из Элементы Цикл
		
		Если ТипЗнч(ЭлементФормы) = Тип("ПолеФормы") Тогда
			ЭлементФормы.Видимость = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	//Элементы.Номер.Видимость			 	 = Ложь;
	//Элементы.ВидОперации.Видимость			 = Ложь;
	//Элементы.ОтображениеВнутрифирменныхРасчетов.Видимость	= Ложь;
	//Элементы.ВалютаОтгрузки.Видимость		 = Ложь;
	//Элементы.Ответственный.Видимость		 = Ложь;
	//Элементы.УИД_Транзакции.Видимость 	 	 = Ложь;
		
    Элементы.ЗначениеОтбора.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СчитаемИтогиНаСервере()
	
	//получаем схему компоновки списка
	СКД = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	
	ПолеИтога = СКД.ПоляИтога.Добавить();
	ПолеИтога.ПутьКДанным 	= "СуммаНачисления";
	ПолеИтога.Выражение 	= "СУММА(СуммаНачисления)";
	
	ПолеИтога = СКД.ПоляИтога.Добавить();
	ПолеИтога.ПутьКДанным 	= "СуммаПлатежа";
	ПолеИтога.Выражение 	= "СУММА(СуммаПлатежа)";
	
	//получаем настройки компоновки списка (в ней уже есть отборы и поиск)
	НастройкаСКД 	= Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	//нам не нужна вся таблица, а только итог
	//очищаем поля основной группировки - получаем в итоге группировку всего запроса по "неопределено" и на выходе одну строку в результате
	НастройкаСКД.Структура[0].ПоляГруппировки.Элементы.Очистить();
	
	//нам не нужны все поля, а только наши ресурсы
	
	НастройкаСКД.Структура[0].Выбор.Элементы.Очистить();
	
	Выб = НастройкаСКД.Структура[0].Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	Выб.Поле 			= Новый ПолеКомпоновкиДанных("СуммаНачисленияВВалютеУУ");
	Выб.Использование 	= Истина;

	Выб = НастройкаСКД.Структура[0].Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	Выб.Поле 			= Новый ПолеКомпоновкиДанных("СуммаПлатежа");
	Выб.Использование 	= Истина;
	
	//поехали за результатом
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СКД, НастройкаСКД,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
  	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//заполняем реквизиты итогов подвала
	ИтогиПодвалСуммаНачисленияВВалютеУУ	= Результат.Итог("СуммаНачисленияВВалютеУУ");
	ИтогиПодвалСуммаПлатежа				= Результат.Итог("СуммаПлатежа");
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОтчетаПриИзменении(Элемент)
	
	ОбновитьСписокНаФорме();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетныйСчетПриИзменении(Элемент)
	
	ОбновитьСписокНаФорме();	

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
    ТекстВопроса = НСтр("ru = 'Вы действительно хотите закрыть форму списка?';"
                     + " es = '¿Realmente quieres cerrar el formulario de lista?'");
    
	Если ЗавершениеРаботы Тогда
		//ТекстПредупреждения = ТекстВопроса;
		//Отказ = Истина;
	ИначеЕсли ЗакрытиеРазрешено = Неопределено Тогда
        ПоказатьВопрос(
          Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект),
          ТекстВопроса, 
          РежимДиалогаВопрос.ДаНет);
        Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
    Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗакрытиеРазрешено = Истина;
		Закрыть();			
    КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТекущемуЗначению(Команда)
    
    ОтборПоТекущемуЗначениюНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура ОтборПоТекущемуЗначениюНаСервере();
	
	Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
    Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    Отбор.ПравоеЗначение = Элементы.Список.ТекущаяСтрока[Элементы.Список.ТекущийЭлемент.Имя];
    Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элементы.Список.ТекущийЭлемент.Имя);
    Отбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
    Отбор.Использование = Истина;
    
    Если Не ЗначениеЗаполнено(ЭтаФорма.ЗначениеОтбора) Тогда
    	ЭтаФорма.ЗначениеОтбора = "Отбор включен: ";
    КонецЕсли; 
    
    ЭтаФорма.ЗначениеОтбора = ЭтаФорма.ЗначениеОтбора
                            + Элементы.Список.ТекущийЭлемент.Имя 
                            + " = "
                            + Отбор.ПравоеЗначение
                            + "; ";
    Элементы.ЗначениеОтбора.Видимость = Истина;	
    
    СчитаемИтогиНаСервере();      
    
КонецПроцедуры

&НаКлиенте
Процедура ОтменаОтбора(Команда)
    
    Этаформа.Список.Отбор.Элементы.Очистить();
    ЭтаФорма.ЗначениеОтбора = "";
    Элементы.ЗначениеОтбора.Видимость = Ложь;
    СчитаемИтогиНаСервере();
    
КонецПроцедуры

// +++ Чесноков М.С. 2022-04-18 issue1
&НаКлиенте
Процедура СоздатьКопииДокументов(Команда)

	ВыделенныеСтрокиМассив =  Новый Массив;

	Для Каждого текСтр Из Элементы.Список.ВыделенныеСтроки Цикл
		ВыделенныеСтрокиМассив.Добавить(ТекСтр);
	КонецЦикла;
	
	ФормаПараметры = Новый Структура("ДокументыМассив",ВыделенныеСтрокиМассив);
	ФормаВыбора = ПолучитьФорму("Обработка.фуГрупповоеКопированиеДокументов.Форма.Форма",ФормаПараметры);	
	ФормаВыбора.Открыть();
	
КонецПроцедуры
// --- Чесноков М.С. 2022-04-18 issue1

&НаКлиенте
Процедура Обновить(Команда)  
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

