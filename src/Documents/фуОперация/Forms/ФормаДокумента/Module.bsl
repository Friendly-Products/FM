#Область о // Стандартные процедуры и функции:
 
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
КонецПроцедуры
 
&НаСервере
Процедура ПриОткрытииНаСервере()
	
	ОтображениеЭлементовФормыПоУмолчанию();
	ЗагрузитьКурсыВалютНаСервере(Объект.Дата);
	
КонецПроцедуры

&НаСервере
Процедура ОтображениеЭлементовФормыПоУмолчанию();
	
	ОтображениеГруппыКурсыОбменаНаСервере();
	ОтображениеКнопокШаблона();
    
    фуОбщийСервер.УстановитьДоступоностьРеквизитовНаФорме(Элементы);
    
КонецПроцедуры

&НаСервере
Процедура ОтображениеКнопокШаблона()
	
	ДоступностьБулево = Ложь;
	Если РольДоступна("ПолныеПрава") ИЛИ 
	     РольДоступна("фуСотрудникФинансовойСлужбы") ИЛИ
		 РольДоступна("фуРуководительФинансовойСлужбы")
	Тогда
		ДоступностьБулево = Истина;
	КонецЕсли;
	
	Элементы.ФормаГруппаШаблоны.Доступность = ДоступностьБулево;
	
КонецПроцедуры	

&НаСервере
Процедура ОтображениеГруппыКурсыОбменаНаСервере()
	
	Если Объект.РасчетныйСчет.ВалютаСчета = Объект.КоррСчёт.ВалютаСчета Тогда
		Элементы.ГруппаКурсыОбмена.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ФактическийКурсОбмена = 0;
	Если Объект.СуммаРасхода <> 0 Тогда
		ФактическийКурсОбмена = Объект.СуммаПрихода / Объект.СуммаРасхода;
	КонецЕсли;
	
	чВалютаКурсЦБПриход = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.РасчетныйСчет.ВалютаСчета,Объект.Дата).Курс; 
	чВалютаКурсЦБРасход = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.КоррСчёт.ВалютаСчета,Объект.Дата).Курс; 
	
	ФактическийКурсОбменаЦБ = 0;
	Если чВалютаКурсЦБРасход <> 0 Тогда
		ФактическийКурсОбменаЦБ = чВалютаКурсЦБПриход / чВалютаКурсЦБРасход;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
	ПриОткрытииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФайлами.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПруфЛинк1Нажатие(Элемент, СтандартнаяОбработка)
	
	Попытка
		ЗапуститьПриложение(Объект.ПруфЛинк);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоступлениеЦенаПриИзменении(Элемент)
	
	РасчетСтоимостиНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоступлениеКоличествоПриИзменении(Элемент)
	
	РасчетСтоимостиНаКлиенте();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииРеквизитФормыВладкаПереводыИКонвертацииНаСервере()
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДокОбъект.РасчетКурсовОбменаНаСервере();
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизитФормыВладкаПереводыИКонвертации(Элемент)
	
	ПриИзмененииРеквизитФормыВладкаПереводыИКонвертацииНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьШаблон(Команда)
	
	Отказ = Ложь;
	ПроверкаЗаполненияКлючевыхРеквизитовДляШаблонаЗаполнения(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = фуОбщийСервер.ПолучитьСтруктуруЗаполненияДокумента();
	ЗаполнитьЗначенияСвойств(ПараметрыФормы,Объект);
	РасчетныйСчет = ПолучитьРасчетныйСчетНаСервере();
	ПараметрыФормы.РасчетныйСчет = РасчетныйСчет;
	ПараметрыФормы.СтрокаПоиска = Объект.Комментарий;
	
	ОткрытьФорму("РегистрСведений.фуАналитикиЗаполненияДокументаОперация.Форма.ФормаЗаписи", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасчетныйСчетНаСервере()
	
	Возврат фуОбщийСервер.ПолучитьРасчетныйСчетДокументаОперация(Объект);
	
КонецФункции

&НаСервере
Процедура ПроверкаЗаполненияКлючевыхРеквизитовДляШаблонаЗаполнения(Отказ)
	
	РасчетныйСчет = фуОбщийСервер.ПолучитьРасчетныйСчетДокументаОперация(Объект);
	Если Не ЗначениеЗаполнено(РасчетныйСчет) Тогда
		фуОбщийКлиентСервер.СообщитьПользователю("Внимание! Не задан расчетный счет.");
		Отказ = Истина;	
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(Объект.Комментарий) Тогда
		фуОбщийКлиентСервер.СообщитьПользователю("Внимание! Не задан комментарий.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоШаблону(Команда)
	
	Отказ = Ложь;
	ПроверкаЗаполненияКлючевыхРеквизитовДляШаблонаЗаполнения(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоШаблонуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоШаблонуНаСервере()
	
	РасчетныйСчет = фуОбщийСервер.ПолучитьРасчетныйСчетДокументаОперация(Объект);
	ДанныеДляЗаполненияДокумента = фуОбщийСервер.ПолучитьДанныеДляЗаполненияДокумента(РасчетныйСчет,Объект.Комментарий);
	Если ДанныеДляЗаполненияДокумента = Неопределено Тогда
		фуОбщийКлиентСервер.СообщитьПользователю("Внимание! Не найден подходящий шаблон.");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект,ДанныеДляЗаполненияДокумента);
	//ЗаполнитьРасчетныйСчетДокументаНаСервере(ДанныеДляЗаполненияДокумента.РасчетныйСчет);
	фуОбщийСервер.ЗаполнитьРасчетныйСчетДокументаОперацияНаСервере(Объект,
	 															   ДанныеДляЗаполненияДокумента.РасчетныйСчет);
	фуОбщийКлиентСервер.СообщитьПользователю("Документ заполнен по шаблону. Расчетный счет: "
	                                        +ДанныеДляЗаполненияДокумента.РасчетныйСчет
											+", контекст поиска: "+ДанныеДляЗаполненияДокумента.СтрокаПоиска
											+".");

КонецПроцедуры

#КонецОбласти

#Область о // Дополнительные процедуры и функции:

&НаСервере
Процедура ЗагрузитьКурсыВалютНаСервере(дДата)
	
	сОсновныеВалюты = фуОперацииСВалютамиКлиентСервер.ПолучитьОсновныеВалютыСервер();

	ЭтотОбъект.КурсЦБДоллар = РаботаСКурсамиВалют.ПолучитьКурсВалюты(сОсновныеВалюты.Доллар,дДата).Курс; 
	ЭтотОбъект.КурсЦБЕвро	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(сОсновныеВалюты.Евро,дДата).Курс; 
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСтоимостиНаКлиенте()
	
	Попытка 
		ТекущиеДанные = ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
		ТекущиеДанные.Стоимость = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	Исключение
		
	КонецПопытки;		
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатьюЗатратДляКурсовыхРазницНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.СтатьяЗатратНаКомиссию) Тогда
		
		Если ЗначениеЗаполнено(Объект.СтатьяЗатрат.СтатьяЗатратДляКурсовыхРазниц) Тогда
			Объект.СтатьяЗатратНаКомиссию = Объект.СтатьяЗатрат.СтатьяЗатратДляКурсовыхРазниц; 
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяЗатратПриИзменении(Элемент)
	
	ЗаполнитьСтатьюЗатратДляКурсовыхРазницНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область о // Стандартные подсистемы:

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаСервере
Функция ПолучитьСтароеЗначениеПоляОплаты(ИмяПоля,НомерСтроки)
	
	Если Объект.Ссылка.Оплата.Количество() = 0 Тогда
		Возврат 0;
	Иначе
		Возврат Объект.Ссылка.Оплата[НомерСтроки-1][ИмяПоля]; 
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОплатаСуммаПриИзменении(Элемент)
    
    Если Не Объект.РучнаяПравкаОплатыТоваровИУслуг Тогда
    	ТекущиеДанные = ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
    	фуОбщийКлиент.РасчетКомиссииПриИзмененииСуммы(ТекущиеДанные,Объект.Ссылка);
    КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ОплатаПередНачаломИзменения(Элемент, Отказ)
    
    // +++ Чесноков М.С. 2020-12-24 F1-29
    Если Не Объект.РучнаяПравкаОплатыТоваровИУслуг Тогда
        ТекущиеДанныеСтруктура = Новый Структура("Сумма,Комиссия,ДополнительныеРасходы");
        ЗаполнитьЗначенияСвойств(ТекущиеДанныеСтруктура,Элемент.ТекущиеДанные);
        
        ЭтотОбъект.Параметры.СтрокаТабличнойЧасти = ТекущиеДанныеСтруктура;
    КонецЕсли; 
    // --- Чесноков М.С. 2020-12-24 F1-29 

КонецПроцедуры

&НаКлиенте
Процедура ОплатаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
    
    // +++ Чесноков М.С. 2020-12-24 F1-29 
    Если Не Объект.РучнаяПравкаОплатыТоваровИУслуг Тогда

        СтарыеДанные = ЭтотОбъект.Параметры.СтрокаТабличнойЧасти;
        НовыеДанные  = Элемент.ТекущиеДанные;

        Если Элемент.ТекущийЭлемент.Имя = "ОплатаДополнительныеРасходы" Тогда
            
            Если СтарыеДанные.ДополнительныеРасходы	<> НовыеДанные.ДополнительныеРасходы Тогда
                НовыеДанные.Комиссия = НовыеДанные.Комиссия 
                                     + СтарыеДанные.ДополнительныеРасходы
                                     - НовыеДанные.ДополнительныеРасходы; 	
            КонецЕсли; 
            
        ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ОплатаКомиссия" Тогда
            
            Если СтарыеДанные.Комиссия <> НовыеДанные.Комиссия Тогда
                НовыеДанные.Сумма = НовыеДанные.Сумма 
                                  - СтарыеДанные.Комиссия
                                  + НовыеДанные.Комиссия; 	
            КонецЕсли; 

        КонецЕсли; 
    КонецЕсли;    
    // --- Чесноков М.С. 2020-12-24 F1-29 
    
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСканДокумента(Команда)
    
    Если ЗначениеЗаполнено(Объект.СканДокументаСсылка) Тогда
        ВопросОПерезаписиСканаНаКлиенте();
    Иначе
        ОткрытьОкноВыбораФайлаКартинкиНаКлиенте();    
    КонецЕсли; 
    
КонецПроцедуры

&НаКлиенте
Процедура ВопросОПерезаписиСканаНаКлиенте()
    
    Оповещение = Новый ОписаниеОповещения("ПослеВопросОПерезаписиСкана",ЭтотОбъект);	
 
    ПоказатьВопрос(Оповещение,
                   НСтр("ru = 'В документе загружен скан документа. Перезаписать?';"
                      + " es = 'El documento tiene un escaneo del documento cargado. Sobrescribir?'"),
                   РежимДиалогаВопрос.ДаНет,
                   0, // таймаут в секундах
                   КодВозвратаДиалога.Нет, // (необ.) кнопка по умолчанию
                   "Сообщение пользователю" // (необ.) заголовок
                   );                 

КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросОПерезаписиСкана(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
        ОткрытьОкноВыбораФайлаКартинкиНаКлиенте();    
    КонецЕсли;	
 
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОкноВыбораФайлаКартинкиНаКлиенте()
    
    // Из файла с клиента
	ПараметрыДиалога = Новый Структура;
	ПараметрыДиалога.Вставить("Заголовок", НСтр("ru = 'Укажите файл со сканом.'"));
	ПараметрыДиалога.Вставить("Фильтр", НСтр("ru = 'Все файлы (*.*)'") + "|*.*");
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьСканДокументаЗавершение", ЭтотОбъект);
	ОбменДаннымиКлиент.ВыбратьИПередатьФайлНаСервер(Оповещение, ПараметрыДиалога, УникальныйИдентификатор);

КонецПроцедуры    
    
&НаКлиенте
Процедура ЗагрузитьСканДокументаЗавершение(Знач РезультатПомещенияФайлов, Знач ДополнительныеПараметры) Экспорт
	
	АдресПомещенногоФайла = РезультатПомещенияФайлов.Хранение;
	ТекстОшибки           = РезультатПомещенияФайлов.ОписаниеОшибки;
	
	Если ПустаяСтрока(ТекстОшибки) И ПустаяСтрока(АдресПомещенногоФайла) Тогда
		ТекстОшибки = НСтр("ru = 'Ошибка передачи файла настроек синхронизации данных на сервер'");
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
		
	// Успешно передали файл, загружаем на сервере.
	ЧастиИмени = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(РезультатПомещенияФайлов.Имя);
    
    УстановитьКартинкуНаСервере(АдресПомещенногоФайла,Объект.СканДокументаСсылка);
    
    ПараметрыЗаписи = Новый Структура;
    ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
    ЭтаФорма.Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКартинкуНаСервере(ПутьФайла,СканДокументаСсылка)
    
    СканДокументаОбъект = фуОбщийСервер.ПолучитьОбъектСканаПоСсылке(СканДокументаСсылка,
                                                                    Объект.Ссылка,
                                                                    Объект.ПодотчетноеЛицо,
                                                                    Объект.СканДата,
                                                                    ПутьФайла);
                                                                    
    Если СканДокументаСсылка = Неопределено Тогда
    	Возврат;
    КонецЕсли;                                                                 
                                                                    
    СканДокументаСсылка = СканДокументаОбъект.Ссылка;                                                                    
    
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСканДокумента(Команда)
    
    фуОбщийКлиент.ОткрытьФормуСканаДокументаНаКлиенте(Объект.СканДокументаСсылка);
    
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСканДокумента(Команда)
    
    Если Не ЗначениеЗаполнено(Объект.СканДокументаСсылка) Тогда
        Возврат;
    КонецЕсли; 
    
    Оповещение = Новый ОписаниеОповещения("ПослеУдалитьСканДокумента",ЭтотОбъект);	
 
    ПоказатьВопрос(Оповещение,
                   НСтр("ru = 'В документе загружен скан документа. Удалить?';"
                      + "es =  'El documento tiene un escaneo del documento cargado. ¿Borrar?'"),
                   РежимДиалогаВопрос.ДаНет,
                   0, // таймаут в секундах
                   КодВозвратаДиалога.Нет, // (необ.) кнопка по умолчанию
                   "Сообщение пользователю" // (необ.) заголовок
                  );    

КонецПроцедуры

&НаКлиенте
Процедура ПослеУдалитьСканДокумента(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
        фуОбщийСервер.УдалитьСканДокументаНаСервере(Объект.СканДокументаСсылка);
        Объект.СканДата = Неопределено;
        Объект.СканДокументаСсылка = Неопределено;
    КонецЕсли;	
 
КонецПроцедуры

&НаСервере
Процедура СуммаПлатежаПриИзмененииНаСервере()
	
	сОсновныеВалюты = фуОперацииСВалютамиКлиентСервер.ПолучитьОсновныеВалютыСервер();
  	Объект.СуммаПлатежаВВалютеУУ = РаботаСКурсамиВалют.ПересчитатьВВалюту(Объект.СуммаПлатежа,
	                                                     ЭтотОбъект.ВалютаОперации,
														 сОсновныеВалюты.Доллар,
														 ЭтотОбъект.Дата); 
КонецПроцедуры

&НаКлиенте
Процедура СуммаПлатежаПриИзменении(Элемент)
	СуммаПлатежаПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти