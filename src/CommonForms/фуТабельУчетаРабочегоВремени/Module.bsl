#Область о // Стандартные процедуры и функции:

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    УстановкаПараметровПоУмолчанию(Параметры); 
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    СформироватьСтруктуруТаблиц();
    ЗагрузитьДанныеНаФормуНаСервере();
                                         
КонецПроцедуры

&НаКлиенте
Процедура тзТабельУчетаРабочегоВремениПередУдалением(Элемент, Отказ)
    Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура тзТабельУчетаРабочегоВремениПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
    Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
    
    МесяцНачисленияСтрокой      = фуОбщийКлиентСервер.ПолучитьПредставлениеМесяца(ЭтотОбъект.МесяцНачисления);
    ЗагрузитьДанныеНаФормуНаСервере();    
    
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбораПериода = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(МесяцНачисления), КонецМесяца(МесяцНачисления));
	ОписаниеОповещения     = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.фуВыборСтандартногоПериодаМесяц", ПараметрыВыбораПериода, Элементы.МесяцНачисленияСтрокой, , , , ОписаниеОповещения);
    
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
    ЗагрузитьДанныеНаФормуНаСервере();    
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
    ЗагрузитьДанныеНаФормуНаСервере();    
КонецПроцедуры

&НаКлиенте
Процедура тзТабельУчетаРабочегоВремениПриИзменении(Элемент)
    ЗагрузитьИтоги_ТабельУчетаРабочегоВремени();    
КонецПроцедуры

&НаКлиенте
Процедура тзТабельУчетаРабочегоВремениПриАктивизацииЯчейки(Элемент)
    
    Если СтрНайти(Элемент.ТекущийЭлемент.Имя,"тзТабельУчетаРабочегоВремени") > 0 Тогда
        
        ДеньСтрока = Сред(Элемент.ТекущийЭлемент.Имя,СтрДлина("тзТабельУчетаРабочегоВремени")+2,5);
        ДеньСтрока = СтрЗаменить(ДеньСтрока,"С","");
        ДеньСтрока = СтрЗаменить(ДеньСтрока,"До","");
        
        Если ЗначениеЗаполнено(ДеньСтрока) Тогда
                        
            Попытка
                ДеньЧисло = Число(ДеньСтрока);	
            Исключение
                ДеньЧисло = 0;
            КонецПопытки;                 
            
            Если ДеньЧисло <> 0 Тогда
                
                ДеньДата = НачалоМесяца(ЭтотОбъект.МесяцНачисления) + 86400 * (ДеньЧисло-1);
                Если Месяц(ДеньДата) <> Месяц(ЭтотОбъект.МесяцНачисления) Тогда
                    Возврат;
                КонецЕсли; 
                
            КонецЕсли; 
            
        КонецЕсли; 
        
    КонецЕсли; 
        
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
    СохранитьДанныеСФормыНаСервере();
КонецПроцедуры

#КонецОбласти 

#Область о // Дополнительные процедуры и функции:

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.МесяцНачисления = РезультатВыбора.НачалоПериода;
    
КонецПроцедуры

&НаСервере
Процедура УстановкаПараметровПоУмолчанию(Параметры)
    
    //ЭтотОбъект.Организация = Справочники.фуОрганизации.НайтиПоКоду("008");    
    
    Если Параметры.Свойство("Организация") Тогда
        ЭтотОбъект.Организация 		= Параметры.Организация; 	
    КонецЕсли; 
    Если Параметры.Свойство("Отдел") Тогда
        ЭтотОбъект.Отдел    = Параметры.Отдел;	
    КонецЕсли; 
    Если Параметры.Свойство("МесяцНачисления") Тогда
        ЭтотОбъект.МесяцНачисления  = Параметры.МесяцНачисления;	
    Иначе
        ЭтотОбъект.МесяцНачисления  = НачалоМесяца(ТекущаяДата());        
    КонецЕсли; 
	
	МесяцНачисленияСтрокой = фуОбщийКлиентСервер.ПолучитьПредставлениеМесяца(ЭтотОбъект.МесяцНачисления);
	
КонецПроцедуры

#КонецОбласти 

#Область о // Формирование структуры таблиц на форме:

&НаКлиенте
Процедура СформироватьСтруктуруТаблиц()
    
    СформироватьСтруктуруТаблицыГЕО();
    
КонецПроцедуры 

&НаСервере
Процедура СформироватьСтруктуруТаблицыГЕО()
    
    МассивТипаВыбора = Новый Массив;
    МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
    ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
    МассивРеквизитов = Новый Массив;
    ИмяТЗ = "ТаблицаГЕО"; 
    ЗаголовокТЗ = "ГЕО";
    МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяТЗ, ОписаниеТипаВыбора, "", ЗаголовокТЗ));
    
    ТЗ = ПолучитьСсылкиГЕОНаСервере();
    
    КвалификаторыЧисла = Новый КвалификаторыЧисла(5, 2, ДопустимыйЗнак.Неотрицательный);
    ОписаниеЧисла = Новый ОписаниеТипов("Число", КвалификаторыЧисла);
    ОписаниеСотрудника = Новый ОписаниеТипов("СправочникСсылка.фуСотрудники");
    ОписаниеДаты = Новый ОписаниеТипов("Дата");
    
    Для Каждого СтрокаТЗ Из ТЗ Цикл
        МассивРеквизитов.Добавить(Новый РеквизитФормы("К"+СтрокаТЗ.Код,ОписаниеЧисла,ИмяТЗ,СтрокаТЗ.Наименование));
    КонецЦикла;
    МассивРеквизитов.Добавить(Новый РеквизитФормы("СотрудникГЕО",ОписаниеСотрудника,ИмяТЗ,"Сотрудник"));
    МассивРеквизитов.Добавить(Новый РеквизитФормы("МесяцГЕО",ОписаниеДаты,ИмяТЗ,"Месяц"));
    МассивРеквизитов.Добавить(Новый РеквизитФормы("ДеньГЕО",ОписаниеДаты,ИмяТЗ,"День"));
    
    ЭтаФорма.ИзменитьРеквизиты(МассивРеквизитов);      
    эТаблица = Элементы.Добавить(ЗаголовокТЗ, Тип("ТаблицаФормы"), Элементы.ГруппаТабельУчетаГЕО);
    эТаблица.ПутьКДанным = ИмяТЗ;
    эТаблица.Отображение = ОтображениеТаблицы.Список;
    эТаблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
    эТаблица.ИзменятьСоставСтрок = Ложь;    
    эТаблица.Высота = 3;
    
    // Колонки на форме:
    //      Сотрудник:
    НовыйЭлемент = Элементы.Добавить("СотрудникГЕО", Тип("ПолеФормы"), эТаблица);
    НовыйЭлемент.ПутьКДанным = ИмяТЗ + "." + "СотрудникГЕО";
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
    НовыйЭлемент.КнопкаОчистки = Ложь;
    НовыйЭлемент.КнопкаВыбора = Ложь;
    НовыйЭлемент.РедактированиеТекста = Истина;
    НовыйЭлемент.КнопкаОткрытия = Истина;
    НовыйЭлемент.Видимость = Ложь;
    
    //      Месяц:
    НовыйЭлемент = Элементы.Добавить("МесяцГЕО", Тип("ПолеФормы"), эТаблица);
    НовыйЭлемент.ПутьКДанным = ИмяТЗ + "." + "МесяцГЕО";
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
    НовыйЭлемент.КнопкаОчистки = Ложь;
    НовыйЭлемент.КнопкаВыбора = Ложь;
    НовыйЭлемент.РедактированиеТекста = Истина;
    НовыйЭлемент.КнопкаОткрытия = Истина;
    НовыйЭлемент.Видимость = Ложь;

    //      День:
    НовыйЭлемент = Элементы.Добавить("ДеньГЕО", Тип("ПолеФормы"), эТаблица);
    НовыйЭлемент.ПутьКДанным = ИмяТЗ + "." + "ДеньГЕО";
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
    НовыйЭлемент.КнопкаОчистки = Ложь;
    НовыйЭлемент.КнопкаВыбора = Ложь;
    НовыйЭлемент.РедактированиеТекста = Истина;
    НовыйЭлемент.КнопкаОткрытия = Истина;
    НовыйЭлемент.Видимость = Ложь;

    //      ГЕО:
    Для Каждого Колонка Из ТЗ Цикл
        НовыйЭлемент = Элементы.Добавить("К"+Колонка.Код, Тип("ПолеФормы"), эТаблица);
        НовыйЭлемент.ПутьКДанным = ИмяТЗ + "." + "К"+Колонка.Код;
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.КнопкаОчистки = Ложь;
        НовыйЭлемент.КнопкаВыбора = Ложь;
        НовыйЭлемент.РедактированиеТекста = Истина;
        НовыйЭлемент.КнопкаОткрытия = Истина;
    КонецЦикла;
    
    тзГео = Новый ТаблицаЗначений;
    тзГео.Колонки.Добавить("СотрудникГЕО",ОписаниеСотрудника,СтрокаТЗ.Наименование);
    тзГео.Колонки.Добавить("МесяцГЕО",ОписаниеДаты,СтрокаТЗ.Наименование);
    тзГео.Колонки.Добавить("ДеньГЕО",ОписаниеДаты,СтрокаТЗ.Наименование);
    Для Каждого СтрокаТЗ Из ТЗ Цикл
        тзГео.Колонки.Добавить("К"+СтрокаТЗ.Код,ОписаниеЧисла,СтрокаТЗ.Наименование);
    КонецЦикла;
    ГеоСтрока = тзГео.Добавить();

    ЭтаФорма.ЗначениеВРеквизитФормы(тзГео, ИмяТЗ);     
       
КонецПроцедуры 

&НаСервере
Функция ПолучитьСсылкиГЕОНаСервере()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   фмГЕО.Ссылка КАК Ссылка,
        |   фмГЕО.Наименование КАК Наименование,
        |   фмГЕО.Код КАК Код
        |ИЗ
        |   Справочник.фуГЕО КАК фмГЕО
        |
        |УПОРЯДОЧИТЬ ПО
        |   фмГЕО.Наименование";

    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

#КонецОбласти 

#Область о // Загрузка списка сотрудников:

// Функция - Получить текст запроса сотрудники
//
// Параметры:
//  ДанныеНачисленияЗарплаты - структура, содержит параметры для запроса 
// 
// Возвращаемое значение:
//   - Текст запроса
//
Функция ПолучитьТекстЗапроса_Сотрудники(ДанныеНачисленияЗарплаты)

	стрТекстЗапроса =	
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	фмКадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	фмКадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	фмКадроваяИсторияСотрудниковСрезПоследних.Отдел КАК Отдел,
		|	фмКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втРаботающиеСотрудникиНаНачалоПериода
		|ИЗ
		|	РегистрСведений.фуКадроваяИсторияСотрудников.СрезПоследних(
		|			&Дата1,
		|			Организация = &Организация
		|				И Отдел = &Отдел
		|				И Сотрудник В (&СотрудникиМассив)) КАК фмКадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	фмКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия В(&ВидыСобытийПриема)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	фмКадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	фмКадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	фмКадроваяИсторияСотрудниковСрезПоследних.Отдел КАК Отдел,
		|	фмКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втРаботающиеСотрудникиНаКонецПериода
		|ИЗ
		|	РегистрСведений.фуКадроваяИсторияСотрудников.СрезПоследних(
		|			&Дата2,
		|			Организация = &Организация
		|				И Отдел = &Отдел
		|				И Сотрудник В (&СотрудникиМассив)) КАК фмКадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	фмКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия В(&ВидыСобытийПриема)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	фмКадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	фмКадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	фмКадроваяИсторияСотрудниковСрезПоследних.Отдел КАК Отдел,
		|	фмКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втУволенныеСотрудникиНаНачалоПериода
		|ИЗ
		|	РегистрСведений.фуКадроваяИсторияСотрудников.СрезПоследних(
		|			&Дата1,
		|			Организация = &Организация
		|				И Отдел = &Отдел
		|				И Сотрудник В (&СотрудникиМассив)) КАК фмКадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	фмКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.фуВидыКадровыхСобытий.Увольнение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	фмКадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
		|	фмКадроваяИсторияСотрудников.Организация КАК Организация,
		|	фмКадроваяИсторияСотрудников.Отдел КАК Отдел,
		|	фмКадроваяИсторияСотрудников.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втУволенныеВТекущемПериоде
		|ИЗ
		|	РегистрСведений.фуКадроваяИсторияСотрудников КАК фмКадроваяИсторияСотрудников
		|ГДЕ
		|	фмКадроваяИсторияСотрудников.Период >= &Дата1
		|	И фмКадроваяИсторияСотрудников.Период <= &Дата2
		|	И фмКадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.фуВидыКадровыхСобытий.Увольнение)
		|	И фмКадроваяИсторияСотрудников.Организация = &Организация
		|	И фмКадроваяИсторияСотрудников.Отдел = &Отдел
		|	И фмКадроваяИсторияСотрудников.Сотрудник В(&СотрудникиМассив)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втРаботающиеСотрудникиНаНачалоПериода.Сотрудник КАК Сотрудник,
		|	втРаботающиеСотрудникиНаНачалоПериода.Организация КАК Организация,
		|	втРаботающиеСотрудникиНаНачалоПериода.Отдел КАК Отдел,
		|	втРаботающиеСотрудникиНаНачалоПериода.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втОбъединение
		|ИЗ
		|	втРаботающиеСотрудникиНаНачалоПериода КАК втРаботающиеСотрудникиНаНачалоПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втРаботающиеСотрудникиНаКонецПериода.Сотрудник,
		|	втРаботающиеСотрудникиНаКонецПериода.Организация,
		|	втРаботающиеСотрудникиНаКонецПериода.Отдел,
		|	втРаботающиеСотрудникиНаКонецПериода.ВидСобытия
		|ИЗ
		|	втРаботающиеСотрудникиНаКонецПериода КАК втРаботающиеСотрудникиНаКонецПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втУволенныеСотрудникиНаНачалоПериода.Сотрудник,
		|	втУволенныеСотрудникиНаНачалоПериода.Организация,
		|	втУволенныеСотрудникиНаНачалоПериода.Отдел,
		|	втУволенныеСотрудникиНаНачалоПериода.ВидСобытия
		|ИЗ
		|	втУволенныеСотрудникиНаНачалоПериода КАК втУволенныеСотрудникиНаНачалоПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втУволенныеВТекущемПериоде.Сотрудник,
		|	втУволенныеВТекущемПериоде.Организация,
		|	втУволенныеВТекущемПериоде.Отдел,
		|	втУволенныеВТекущемПериоде.ВидСобытия
		|ИЗ
		|	втУволенныеВТекущемПериоде КАК втУволенныеВТекущемПериоде
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбъединение.Сотрудник КАК Сотрудник,
		|	втОбъединение.Организация КАК Организация,
		|	втОбъединение.Отдел КАК Отдел
		|ИЗ
		|	втОбъединение КАК втОбъединение
		|ГДЕ
		|	втОбъединение.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.фуВидыКадровыхСобытий.Увольнение)
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбъединение.Сотрудник,
		|	втОбъединение.Организация,
		|	втОбъединение.Отдел
		|
		|УПОРЯДОЧИТЬ ПО
		|	втОбъединение.Сотрудник.Наименование";
	
	Если Не ЗначениеЗаполнено(ДанныеНачисленияЗарплаты.СотрудникиМассив) Тогда
		
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"фуКадроваяИсторияСотрудников.Сотрудник В (&СотрудникиМассив)","Истина");
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"Сотрудник В (&СотрудникиМассив)","Истина");
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеНачисленияЗарплаты.Организация) Тогда
        
        стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"фуКадроваяИсторияСотрудников.Организация = &Организация","Истина");
        стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"Организация = &Организация","Истина");
        
    КонецЕсли;		
	
	Если Не ЗначениеЗаполнено(ДанныеНачисленияЗарплаты.Отдел) Тогда
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"фуКадроваяИсторияСотрудников.Отдел = &Отдел","Истина");
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"Отдел = &Отдел","Истина");
	КонецЕсли;		
	
	Возврат стрТекстЗапроса;
	
КонецФункции

// Функция возвращает выборку работающих сотрудников за период.
//
//	Параметры:
//
//	ПараметрыЗапроса - структура:
//		Организация	- ссылка, справочник "Организации";
//		Отдел - ссылка, справочник "Подразделения"
//		Дата1 - дата, начало перода;
//		Дата2 - дата, конец периода;
//		СотрудникиМассив - массив, перечень сотрудников;
//
//		Все параметры могут быть заданы как пустые.
Функция ПолучитьВыборкуДляЗаполнения_Сотрудники(ПараметрыЗапроса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапроса_Сотрудники(ПараметрыЗапроса); 
	
	массВидыСобытийПриема = Новый Массив;
	массВидыСобытийПриема.Добавить(Перечисления.фуВидыКадровыхСобытий.ПриемНаРаботу);
	массВидыСобытийПриема.Добавить(Перечисления.фуВидыКадровыхСобытий.КадровоеИзменение);
	массВидыСобытийПриема.Добавить(Перечисления.фуВидыКадровыхСобытий.Увольнение);
	Запрос.УстановитьПараметр("ВидыСобытийПриема", массВидыСобытийПриема);
	
	Запрос.УстановитьПараметр("Организация", ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("Отдел", ПараметрыЗапроса.Отдел);
	Запрос.УстановитьПараметр("Дата1", ПараметрыЗапроса.Дата1);
	Запрос.УстановитьПараметр("Дата2", ПараметрыЗапроса.Дата2);
	Запрос.УстановитьПараметр("СотрудникиМассив", ПараметрыЗапроса.СотрудникиМассив);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти 

#Область о // Исходные данные:

&НаСервере
Функция ПолучитьИсходныеДанные()
    
    ИсходныеДанныеСтруктура = ПолучитьСтруктуруПараметровДляЗапроса_Сотрудники();
    ИсходныеДанныеСтруктура.Организация = ЭтотОбъект.Организация;
    ИсходныеДанныеСтруктура.Отдел = ЭтотОбъект.Отдел; 
    ИсходныеДанныеСтруктура.Вставить("СотрудникиТаблица",ПолучитьВыборкуДляЗаполнения_Сотрудники(ИсходныеДанныеСтруктура));
    
    Возврат ИсходныеДанныеСтруктура; 
    
КонецФункции

#КонецОбласти 

#Область о // Загрузка данных на форму:

&НаСервере
Процедура ЗагрузитьДанныеНаФормуНаСервере()
    
    ЭтотОбъект.тзТабельУчетаРабочегоВремени.Очистить();
    ЭтотОбъект.ТаблицаГЕО.Очистить();
    
    ИсходныеДанные = ПолучитьИсходныеДанные(); 
    
    ЗагрузитьДанные_ТабельУчетаРабочегоВремени(ИсходныеДанные);
    
КонецПроцедуры  

// Функция - Получить структуру параметров для запроса сотрудники
// 
// Возвращаемое значение:
//   - Структура параметров для запроса по сотрудникам. 
//
&НаСервере
Функция ПолучитьСтруктуруПараметровДляЗапроса_Сотрудники() Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("Организация",Справочники.фуОрганизации.ПустаяСсылка());
	СтруктураПараметров.Вставить("Отдел",Справочники.фуОтделы.ПустаяСсылка());
	СтруктураПараметров.Вставить("Дата1",НачалоМесяца(ЭтотОбъект.МесяцНачисления));
	СтруктураПараметров.Вставить("Дата2",КонецМесяца(ЭтотОбъект.МесяцНачисления));
	СтруктураПараметров.Вставить("СотрудникиМассив",Новый Массив);
	
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти 

#Область о // Загрузка табеля учета рабочего времени:

&НаСервере
Процедура ЗагрузитьДанные_ТабельУчетаРабочегоВремени(ИсходныеДанные)
    
    ТабельУчетаРабочегоВремениТаблица = ПолучитьДанныеТабеляРабочегоВремени(ИсходныеДанные);    
    
    Для каждого СотрудникСтрока Из ИсходныеДанные.СотрудникиТаблица Цикл
        
        ПоискСотрудника = Новый Структура("Сотрудник",СотрудникСтрока.Сотрудник);
        ТабельРегистрМассив = ТабельУчетаРабочегоВремениТаблица.НайтиСтроки(ПоискСотрудника);
        
        ТабельСтрока = ЭтотОбъект.тзТабельУчетаРабочегоВремени.Добавить();
        ЗаполнитьЗначенияСвойств(ТабельСтрока,СотрудникСтрока);
        
        Если ТабельРегистрМассив.Количество() > 0 Тогда
            
            Для каждого ТабельРегистрСтрока Из ТабельРегистрМассив Цикл
                
                ТабельСтрока["Д"+День(ТабельРегистрСтрока.День)+"С"]    = ТабельРегистрСтрока.ЧасыС;
                ТабельСтрока["Д"+День(ТабельРегистрСтрока.День)+"До"]   = ТабельРегистрСтрока.ЧасыДо;
                
            КонецЦикла; 
            
        КонецЕсли; 
        
    КонецЦикла; 
    
    ЗагрузитьИтоги_ТабельУчетаРабочегоВремени();
    
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИтоги_ТабельУчетаРабочегоВремени()
    
    Для каждого ТабельСтрока Из ЭтотОбъект.тзТабельУчетаРабочегоВремени Цикл
        
        ТабельСтрока["Д_01_15"] = 0; 
        ТабельСтрока["Д_16_31"] = 0; 
        ТабельСтрока["Д_Итог"]  = 0; 
        
        Для ДеньЧисло = 1 По 31  Цикл
            
            ЧасыС  = ТабельСтрока["Д"+ДеньЧисло+"С"];
            ЧасыПо = ТабельСтрока["Д"+ДеньЧисло+"До"];
            Часы = ЧасыПо - ЧасыС;
                        
            Если ДеньЧисло <= 15  Тогда
                ТабельСтрока["Д_01_15"] = ТабельСтрока["Д_01_15"] + Часы; 
            Иначе    
                ТабельСтрока["Д_16_31"] = ТабельСтрока["Д_16_31"] + Часы; 
            КонецЕсли; 
            
            ТабельСтрока["Д_Итог"] = Часы; 
            
        КонецЦикла;      
        
    КонецЦикла; 
    
КонецПроцедуры

&НаСервере
Функция  ПолучитьДанныеТабеляРабочегоВремени(ИсходныеДанные)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	фуТабельУчетаРабочегоВремени.Сотрудник КАК Сотрудник,
        |	фуТабельУчетаРабочегоВремени.Сотрудник.Наименование КАК СотрудникНаименование,
        |	фуТабельУчетаРабочегоВремени.День КАК День,
        |	фуТабельУчетаРабочегоВремени.Месяц КАК Месяц,
        |	фуТабельУчетаРабочегоВремени.ЧасыС КАК ЧасыС,
        |	фуТабельУчетаРабочегоВремени.ЧасыДо КАК ЧасыДо,
        |	фуТабельУчетаРабочегоВремени.Часы КАК Часы
        |ИЗ
        |	РегистрСведений.фуТабельУчетаРабочегоВремени КАК фуТабельУчетаРабочегоВремени
        |ГДЕ
        |	фуТабельУчетаРабочегоВремени.Месяц = &МесяцУчета
        |	И фуТабельУчетаРабочегоВремени.Сотрудник В(&СотрудникиМассив)
        |
        |УПОРЯДОЧИТЬ ПО
        |	СотрудникНаименование";
    
    СотрудникиМассив = ИсходныеДанные.СотрудникиТаблица.ВыгрузитьКолонку("Сотрудник"); 
    
    Запрос.УстановитьПараметр("МесяцУчета", НачалоМесяца(ИсходныеДанные.Дата1));
    Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
    
    тз = Запрос.Выполнить().Выгрузить(); 
    тз.Индексы.Добавить("Сотрудник");
    
    Возврат тз;     
    
КонецФункции

#КонецОбласти 

#Область о // Сохранение данных с формы:

&НаСервере
Процедура СохранитьДанныеСФормыНаСервере()
    
    СохранитьДанные_ТабельУчетаРабочегоВремени();
    
КонецПроцедуры                            

#КонецОбласти 

#Область о // Сохранение табеля учета рабочего времени:

&НаСервере
Процедура СохранитьДанные_ТабельУчетаРабочегоВремени()
    
    чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
    
    ТабельНаборЗаписей = РегистрыСведений.фуТабельУчетаРабочегоВремени.СоздатьНаборЗаписей();
    ТабельНаборЗаписей.Отбор.Месяц.Установить(НачалоМесяца(ЭтотОбъект.МесяцНачисления));
    ТабельНаборЗаписей.Очистить();
    
    Для каждого ТабельСтрока Из ЭтотОбъект.тзТабельУчетаРабочегоВремени  Цикл
        
		Если Не ЗначениеЗаполнено(ТабельСтрока.Сотрудник) Тогда
			Продолжить;
		КонецЕсли;
		
		Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
			
			чТекущийДень = чНачалоПериода + чИндекс * 60 * 60 * 24;

			стрДниC  = ТабельСтрока["Д"+(чИндекс+1)+"С"];
			стрДниДо = ТабельСтрока["Д"+(чИндекс+1)+"До"];
            стрДниЧасы = стрДниДо - стрДниC;
			
			Если (стрДниЧасы <> 0) Тогда
                
                ТабельЗапись            = ТабельНаборЗаписей.Добавить();
                ЗаполнитьЗначенияСвойств(ТабельЗапись,ТабельСтрока);
                
				ТабельЗапись.Месяц		= чНачалоПериода;
                ТабельЗапись.День       = чТекущийДень;
				ТабельЗапись.ЧасыС      = стрДниC;
				ТабельЗапись.ЧасыДо     = стрДниДо;
				ТабельЗапись.Часы       = стрДниЧасы;
				
			КонецЕсли;	
				
		КонецЦикла;
                 
    КонецЦикла; 
    
    Если ТабельНаборЗаписей.Количество() > 0 Тогда
		ТабельНаборЗаписей.Записать(Истина);
	КонецЕсли;   
    
КонецПроцедуры

#КонецОбласти          